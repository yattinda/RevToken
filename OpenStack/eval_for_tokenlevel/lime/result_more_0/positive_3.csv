label,status,file_dir,change_id,change_num,patch_set,shaped_code,before_code,after_code,line,ref
1,1,nova/objects/instance_numa.py,I6cd206542fdd28f3ef551dcc727f4cb35a53f6a3,724381,1,if nova object name not in primitive ,        if 'nova_object.name' not in primitive:,"        """"""\n    @classmethod\n    def _migrate_legacy_object(cls, context, instance_uuid, primitive):",142,refs/changes/81/724381/1
1,1,nova/tests/functional/api_sample_tests/test_servers.py,Ia3dea78f16cb3c7081714c4db36e20d5ee76ed7d,745906,2,ADMIN API True,    ADMIN_API = True,\nVALID_DISK_CACHEMODES = [\n,978,refs/changes/06/745906/2
1,1,nova/api/openstack/placement/objects/resource_provider.py,I89d2892fabb6273bfa793f4a06dced80b68e93d5,588350,1,LOG debug s d of d returned d matches ,"            LOG.debug(""%s (%d of %d) returned %d matches"",","                      str(request), str(suffix), len(alloc_reqs))\n            LOG.debug(""%s (suffix '%s') returned %d matches"",\n                      str(request), str(suffix), len(alloc_reqs))",4043,refs/changes/50/588350/1
1,1,nova/api/openstack/placement/objects/resource_provider.py,I1d9bf27f49306032929274446cf3952bd42e4f8c,566166,1,class MatchSpec object ,class MatchSpec(object):,"    candidates are matched.\nclass CandidateSearchContext(object):\n    """"""An object keeping certain lookups and caches for when allocation",3725,refs/changes/66/566166/1
1,1,nova/tests/unit/virt/libvirt/test_driver.py,Ib9f735216773224f91ac7f49fbe2eee119670872,652104,5,r neutron physnet bar numa nodes option was defined ,"                r""'\[neutron_physnet_bar\] numa_nodes' option was defined."",","                ""was listed in '[neutron] physnets' but no corresponding ""\n                ""'[neutron_physnet_bar] numa_nodes' option was defined."",\n",15769,refs/changes/04/652104/5
1,1,nova/api/validation/extra_specs/hw.py,Ib64a1348cce1dca995746214616c4f33d9d664bd,704643,2, topology of the guest ,            'topology of the guest.',            'The number of virtual CPU cores to emulate per socket in the '\n            'guest CPU topology.'\n,218,refs/changes/43/704643/2
1,1,nova/virt/libvirt/driver.py,I043880cb81b02488d13c3387d696142545c13395,770533,7,if self supports vdpa ,        if self._supports_vdpa():,            libvirt.VIR_CONNECT_LIST_NODE_DEVICES_CAP_NET |\n            libvirt.VIR_CONNECT_LIST_NODE_DEVICES_CAP_PCI_DEV\n        ),7409,refs/changes/33/770533/7
1,1,nova/virt/libvirt/driver.py,I0ea3a0a1342ef53ed891c145561eb7402f553a8b,728481,4,if object numa cell cpu pinning and,        if (object_numa_cell.cpu_pinning and,"            pin_cpuset.cpuset = set([inst_cell.cpu_pinning[vcpu]])\n        # 'InstanceNUMACell.cpu_pinning' tracks the CPU pinning pair for guest\n        # CPU and host CPU. If the guest CPU is in the keys of 'cpu_pinning',",4985,refs/changes/81/728481/4
1,1,nova/scheduler/utils.py,I6e15c6507d037ffe263a460441858ed454b02504,628163,1,cpu multipliers append float val ,                cpu_multipliers.append(float(val)),"    return value\n        value = utils.validate_num_values(\n            aggregate_vals, multiplier_config, cast_to=float)",1049,refs/changes/63/628163/1
1,1,nova/virt/powervm/disk/driver.py,Id3a2a1df3746120af38b62fdc902c3c0c44c38ee,549053,6,pass,        pass,        raise NotImplementedError()\n        raise NotImplementedError()\n,242,refs/changes/53/549053/6
1,1,nova/compute/manager.py,Ia1b3ab0b66fdaf569f6c7a09510f208ee28725b2,680107,1,if numa topology not in instance or,            if ('numa_topology' not in instance or,\n            if not (instance.numa_topology and\n                        instance.numa_topology.cpu_pinning_requested):,827,refs/changes/07/680107/1
1,1,nova/virt/powervm/disk/driver.py,Id3a2a1df3746120af38b62fdc902c3c0c44c38ee,549053,6,pass,        pass,        raise NotImplementedError()\n        raise NotImplementedError()\n,279,refs/changes/53/549053/6
1,1,nova/scheduler/client/report.py,I66d69327d3361825ca0b44b46744b97ea3069eb1,639653,2, There is not enough inventory left on s RP ,                                'There is not enough inventory left on %s RP ',                                'resources.' % (\n                                'There is not enough inventory left on %s '\n                                'resource provider to remove %d amount of %s ',1700,refs/changes/53/639653/2
1,1,nova/virt/libvirt/driver.py,I146cc9d4caafd0abd6b2642edb6eb59cd7e339b7,634549,10,for ns conf in CONF libvirt pmem namespace sizes ,            for ns_conf in CONF.libvirt.pmem_namespace_sizes:,        # pmem name list group by label\n        pmem_names_by_label = collections.defaultdict(list)\n        if CONF.libvirt.pmem_namespaces:,434,refs/changes/49/634549/10
1,1,nova/tests/functional/api_sample_tests/test_servers.py,Ia3dea78f16cb3c7081714c4db36e20d5ee76ed7d,745906,2,ADMIN API True,    ADMIN_API = True,\nVALID_DISK_CACHEMODES = [\n,1001,refs/changes/06/745906/2
1,1,nova/policies/base.py,I999f8d84e10ff1a57c1ff6b717801b495032e358,645452,8,PROJECT MEMBER OR SYSTEM ADMIN PROJECT MEMBER or SYSTEM ADMIN,PROJECT_MEMBER_OR_SYSTEM_ADMIN = PROJECT_MEMBER + 'or' + SYSTEM_ADMIN,PROJECT_READER_OR_SYSTEM_READER = PROJECT_READER + ' or ' + SYSTEM_READER\nPROJECT_MEMBER_OR_SYSTEM_ADMIN = PROJECT_MEMBER + ' or ' + SYSTEM_ADMIN\nPROJECT_READER_OR_SYSTEM_READER = PROJECT_READER + ' or ' + SYSTEM_READER,35,refs/changes/52/645452/8
1,1,nova/api/openstack/compute/server_password.py,Ic0b16608078e4545f546509df94caba3166ed6e2,660950,10,self compute api compute API args kwargs ,"        self.compute_api = compute.API(*args, **kwargs)","    def __init__(self):\n        super(ServerPasswordController, self).__init__()\n        self.compute_api = compute.API()",28,refs/changes/50/660950/10
1,1,nova/compute/provider_tree.py,If37aaff1e3652692fd0750e98612f3b040019042,678449,3,return True,        return True,            self.resources = copy.deepcopy(resources)\n            return True\n,234,refs/changes/49/678449/3
1,1,nova/tests/functional/test_servers.py,I1222fc21bde4158df1db70370c7f3bd319ec081f,699065,3,qos normal port qos sriov port self flavor with group policy ,"            qos_normal_port, qos_sriov_port, self.flavor_with_group_policy)",\n        # Use a custom weigher to make sure that we have a predictable host\n,7501,refs/changes/65/699065/3
1,1,nova/scheduler/client/report.py,I097732754b67bd5cf50abd15db7da3f013b6cdd5,583667,1,return resp json consumer generation ,            return resp.json()['consumer_generation'],"\n                          ""or a temporary occurrence as compute nodes start ""\n",1483,refs/changes/67/583667/1
1,1,nova/virt/libvirt/driver.py,I2ef7c5bef87bd64c087f3b136c2faac9a3865f10,774240,1,flag flag strip ,                flag = flag.strip('-'),                            policy='disable'))\n                flag = flag.lstrip('-')\n                cpu.add.feature(,705,refs/changes/40/774240/1
1,1,nova/tests/unit/virt/libvirt/test_host.py,I2c7b183fcb01f3cb67cb1c8b8bea7aaf5ce424f3,770532,7,def test get vdpa nodedev by address self ,    def test_get_vdpa_nodedev_by_address(self):,    def test_get_vdpa_device_path(self):\n    def test_get_vdpa_device_path(self):\n,1245,refs/changes/32/770532/7
1,1,nova/tests/unit/policies/test_admin_password.py,Ic6e1fb081fe61262f718efc045b3b3f28694e8a7,710813,2, role member and project id project id s ,"                ""role:member and project_id:%(project_id)s""",\n                       fatal=False):\n,140,refs/changes/13/710813/2
1,1,nova/conductor/manager.py,Ie49d605c66062d2548241d7e04f5a2a6b98c011e,569498,5,LOG warning ,                LOG.warning(,        if missing_traits:\n            LOG.error(\n,1053,refs/changes/98/569498/5
1,1,nova/scheduler/request_filter.py,I667f56612d7f63834863476694cb1f4c71a58302,749068,2,for requested network in requested networks or ,    for requested_network in requested_networks or []:,    for requested_network in requested_networks:\n    for requested_network in requested_networks:\n,305,refs/changes/68/749068/2
1,1,nova/virt/powervm/disk/driver.py,Id3a2a1df3746120af38b62fdc902c3c0c44c38ee,549053,6,pass,        pass,        raise NotImplementedError()\n        raise NotImplementedError()\n,242,refs/changes/53/549053/6
1,1,nova/tests/functional/api_sample_tests/test_servers.py,Ia3dea78f16cb3c7081714c4db36e20d5ee76ed7d,745906,2,ADMIN API True,    ADMIN_API = True,\nVALID_DISK_CACHEMODES = [\n,231,refs/changes/06/745906/2
1,1,nova/virt/block_device.py,I4205c00311f389907dcc390869414687ac03b7f5,682378,1,context instance volume api self volume size wait func ,"                context, instance, volume_api, self.volume_size, wait_func,","                wait_func=wait_func, snapshot=snapshot)\n                context, instance, volume_api, self.volume_size,\n                wait_func=wait_func, snapshot=snapshot)",761,refs/changes/78/682378/1
1,1,nova/virt/libvirt/driver.py,Ia8a35ecff20911471a5c353c0b55be86f2e4e21a,631237,1, param cells An list of LibvirtConfigCapsNUMACell objects ,        :param cells: An list of ``LibvirtConfigCapsNUMACell`` objects.,        :param cells: A list of ``LibvirtConfigCapsNUMACell`` objects.\n        :param cells: A list of ``LibvirtConfigCapsNUMACell`` objects.\n,6422,refs/changes/37/631237/1
1,1,nova/compute/manager.py,I43e995c3f5d71e56f0b0e136e45a307e329d7ae4,598084,5,timeout CONF instance delete interval <NUMBER>,        timeout = CONF.instance_delete_interval * 2,\n    except OSError as e:\n,7789,refs/changes/84/598084/5
1,1,nova/image/glance.py,I20913201cf945a7fde1f9e6264c415e1235db7b9,738738,2, param write image Write the image file provided by image chunks ,        :param write_image: Write the image file provided by image_chunks.,        :param dst_path: Filepath to transfer the image file to.\n        :param dst_path: Filepath to transfer the image file to.\n,342,refs/changes/38/738738/2
1,1,nova/api/openstack/compute/views/servers.py,I55bf78e63f68f8167249edc3327b024d9ecb0af2,679181,1,unknown only None,                unknown_only = None,"                # API.\n                unknown_only = self._get_unknown_only(context)\n                # If we're not allowed by policy to show host status at all,",416,refs/changes/81/679181/1
1,1,nova/tests/functional/api_sample_tests/test_servers.py,Ia3dea78f16cb3c7081714c4db36e20d5ee76ed7d,745906,2,ADMIN API True,    ADMIN_API = True,\nVALID_DISK_CACHEMODES = [\n,231,refs/changes/06/745906/2
1,1,nova/compute/api.py,Ife3c7a5a95c5d707983ab33fd2fbfc1cfb72f676,688802,1,context instance uuid force True ,"                context, instance.uuid, force=True)","                context, instance.uuid)\n                context, instance.uuid)\n",2321,refs/changes/02/688802/1
1,1,nova/tests/functional/db/test_instance_mapping.py,Ia30405de4bf8e8ac07b942e44b05a868a18eb80a,582536,1,self context <NUMBER> <NUMBER> <NUMBER> <NUMBER> <NUMBER> ,"            self.context, '00000000-0000-0000-0000-000000000000')","        self.assertEqual(uuids[5], marker.project_id)\n            self.context, instance_mapping.FAKE_UUID)\n        self.assertEqual(uuids[5], marker.project_id)",170,refs/changes/36/582536/1
1,1,nova/compute/api.py,I7f3cbc57a374b2f271018a2f6ef33ef579798db8,780333,1,search opts ,        search_opts = {,"        # so this probably works, but we block evac with vdpa until tested.\n        if instance.has_vdpa_ports():\n",3970,refs/changes/33/780333/1
1,1,nova/tests/functional/api_sample_tests/test_cells.py,Iddb519008515f591cf1d884872a5887afbe766f2,651291,1,self assertEqual <NUMBER> ex response status code ,"        self.assertEqual(410, ex.response.status_code)","                          self.api.api_delete, 'os-cells/cell3',\n                          check_response_state=[410])\n",26,refs/changes/91/651291/1
1,1,nova/virt/hardware.py,I24ab1034c84608181a18bd4c64e3e83acd2b40b2,716271,1,raise exception Invalid ,        raise exception.Invalid(,        raise exception.RequiredMixedOrRealtimeCPUMask\n        raise exception.RequiredMixedOrRealtimeCPUMask\n,1991,refs/changes/71/716271/1
1,1,nova/conf/cyborg.py,Iee0766269d61948ad701911e8b0e5e24d3d6eb04,631242,1,ks loading get auth plugin conf options v<NUMBER>password ,            ks_loading.get_auth_plugin_conf_options('v2password') +,\n                    vifs = [vif.source_vif for vif in migrate_data.vifs\n,63,refs/changes/42/631242/1
1,1,nova/virt/libvirt/driver.py,I573396116e10cf87f80f1ded55f2cd8f498859e4,710785,2,run as root True ,                                            run_as_root=True),"                info = images.privileged_qemu_img_info(\n                    path, output_format='json')\n",1960,refs/changes/85/710785/2
1,1,nova/utils.py,I00d29e9fd80e6b8f7ba3bbd8e82dde9d4cb1522f,555282,1, param host The name of the host to which the server is evacuated ,    :param host: The name of the host to which the server is evacuated.,    :param host: The name of the compute host.\n    :param host: The name of the compute host.\n,1391,refs/changes/82/555282/1
1,1,nova/tests/unit/scheduler/test_utils.py,Iff84fcba02a4b6d7717f4b387e392593f2983118,728482,4,return value set <NUMBER> <NUMBER> ,"                return_value=set([2, 3]))","        """"""\n                new=mock.Mock(return_value={2, 3}))\n    def test_resource_request_init_with_mixed_cpus_isolate_emulator(self):",1086,refs/changes/82/728482/4
1,1,nova/config.py,Id7c2f0b53c8871ff47a836ec4c324c8cce430b79,564440,1, register neutron numa opts ,    _register_neutron_numa_opts(),    # TODO(stephenfin): Move this to nova/compute/manager.py\n    _register_dynamic_opts()\n,65,refs/changes/40/564440/1
1,1,nova/tests/fixtures.py,I4a32a688c7ceb05c263a0e93a91fb9b8ff0c65d4,683609,1, A fixture to temporary fix oslo messaging bug <NUMBER> by using,"    """"""A fixture to temporary fix oslo.messaging bug #1529084 by using","\n                context, instance, volume_api, self.volume_size,\n",2153,refs/changes/09/683609/1
1,1,nova/compute/resource_tracker.py,I033e8269194de54432079cbc970431e3dcea7ce5,672106,4, except the AggregateCoreFilter and related RAM and disk filters now ,"        # except the AggregateCoreFilter and related RAM and disk filters now,","        # about dropping the fields from the 'ComputeNode' object entirely\n        # except 'Aggregate(Core|Ram|Disk)Filter', the 'os-hypervisors' API,\n        # and perhaps some out-of-tree filters. Once the in-tree stuff is",1057,refs/changes/06/672106/4
1,1,nova/compute/manager.py,I038867c4094d79ae4a20615ab9c9f9e38fcc2e0a,623543,39,dev rp name dev rp name ,                dev_rp_name = dev_rp['name'],\n                dev_rp_name = self.reportclient.get_resource_provider_name(\n,2160,refs/changes/43/623543/39
1,1,nova/api/openstack/placement/handlers/resource_provider.py,Ic7f4ea6f97f6bd434cf7338dec9ce7db40a300a6,595453,1,<NUMBER> microversions <NUMBER> <NUMBER> response with an empty body,    200 (microversions 1.20 - ) response with an empty body,    On success return a 201 response with an empty body\n    (microversions 1.0 - 1.19) or a 200 response with a\n    payload representing the newly created resource provider,80,refs/changes/53/595453/1
1,1,nova/virt/libvirt/driver.py,I6a1cebb6676b20b76e451fc3bde5ea54bbf16ff7,715489,5, reshape functional test,            # reshape functional test,            # FIXME(sbauza): No longer accept the parent value to be nullable\n            # once we fix the reshape functional test\n,6928,refs/changes/89/715489/5
1,1,nova/virt/fake.py,I4ab96095106b38737ed355fcad07e758f8b5a9b0,687140,5,return cached ,            return 'cached',            return True\n            return True\n,1028,refs/changes/40/687140/5
1,1,nova/api/openstack/api_version_request.py,Ic98e01ef5385606792f25f261e36f551386033ae,566473,1, <NUMBER> <NUMBER> Add PENDING in InstanceState ,    * 2.63 - Add PENDING in InstanceState.,             ``PENDING`` state is mapped to the ``ERROR`` state.\n    * 2.63 - Add support for applying trusted certificates when creating or\n             rebuilding a server.,151,refs/changes/73/566473/1
1,1,nova/tests/functional/test_servers.py,Id78627c5c08090de6220249a5f44d26bf32724af,684545,1,def fake orig claim ,        def fake_orig_claim(,\n    Note that this weigher is supposed to be used via\n,3362,refs/changes/45/684545/1
1,1,nova/virt/libvirt/volume/net.py,If642103dbe5f74048b5e2263652d8e9cf7899177,590188,1,new size self connector extend volume connection info data ,        new_size = self.connector.extend_volume(connection_info['data']),\n                    if not disk:\n,155,refs/changes/88/590188/1
1,1,nova/quota.py,Ifa7df0c6b9d0042f51c0e9fc27a946870f780a44,614783,3, instances if CONF api instance list per project cells is True and,    # instances if CONF.api.instance_list_per_project_cells is True and,    # variant that makes this native to nova.context.\n    # instances. We could optimize this to avoid the CellMappingList query\n    # for single-cell deployments by checking the cell cache and only doing,1172,refs/changes/83/614783/3
1,1,nova/policies/volumes.py,I37fa825b0e915e83da7023564a29811dcdfa058d,742777,1,This API is proxy calls to the Volume service This is deprecated ,"This API is proxy calls to the Volume service. This is deprecated."""""",","This API is a proxy call to the Volume service. It is deprecated."""""",\nThis API is a proxy call to the Volume service. It is deprecated."""""",\n",42,refs/changes/77/742777/1
1,1,nova/tests/unit/virt/powervm/tasks/test_storage.py,I2691b09d95691915dc1065284d25ad22db41d32b,543023,9, Management Partition is VIOS and Novalink hosted storage,        # Management Partition is VIOS and Novalink hosted storage,        # Management Partition is VIOS and NovaLink hosted storage\n        # Management Partition is VIOS and NovaLink hosted storage\n,233,refs/changes/23/543023/9
1,1,nova/policies/remote_consoles.py,Ic81da0ebc23d6526c5ca2d9d98159e07f3e53822,716484,2,This policy is for POST remote consoles API and below Server actions APIs,This policy is for POST /remote-consoles API and below Server actions APIs,This policy is for ``POST /remote-consoles`` API and below Server actions APIs\nThis policy is for ``POST /remote-consoles`` API and below Server actions APIs\n,30,refs/changes/84/716484/2
1,1,nova/tests/unit/policies/test_attach_interfaces.py,I8a91db6c13710b693b3b4a3d002fd2ac09fcf3f3,705126,8,It defines the set of context with scopped token,    It defines the set of context with scopped token,    It defines the set of context with scoped token\n    It defines the set of context with scoped token\n,114,refs/changes/26/705126/8
1,1,nova/api/openstack/compute/shelve.py,I4b13483eef42bed91d69eabf1f30762d6866f957,663851,4,CONF nova conf CONF,CONF = nova.conf.CONF,\n        for host_name in host_infos:\n,32,refs/changes/51/663851/4
1,1,nova/api/openstack/api_version_request.py,I2f8b4a12a088b9ed96b428eafde2e0c478fb1db5,557145,4, <NUMBER> <NUMBER> Add host hostId to show instance action event API ,    * 2.61 - Add host/hostId to show instance action event API.,    * 2.61 - Add ``host`` and ``hostId`` to show instance action event API.\n    * 2.61 - Add ``host`` and ``hostId`` to show instance action event API.\n,146,refs/changes/45/557145/4
1,1,nova/tests/functional/regressions/test_bug_1732947.py,I1b6e340775379964ff149227355a049ecfa73f0e,684326,1,USE NEUTRON False,    USE_NEUTRON = False,\n    Note that this weigher is supposed to be used via\n,33,refs/changes/26/684326/1
1,1,nova/virt/libvirt/driver.py,I70310a6769f02ab13c7495ae2075ae6890df728a,687808,1,raise exception InternalError ,                raise exception.InternalError(,"                    reason=m % {'ret': e, 'u': u})\n                raise exception.InvalidCPUInfo(\n                    reason=m % {'ret': e, 'u': u})",8290,refs/changes/08/687808/1
1,1,nova/pci/request.py,I9ba475e91b8283f063db446de74d3e4b2de002c5,619929,2, the given VIF PCI address s vif pci dev address ,"                      "" the given VIF PCI address: %s"", vif_pci_dev_address)","                      vif_pci_dev_address, inst_compute_node_id)\n                      "" the given VIF PCI address: %s on Node(ID=%d)"",\n                      vif_pci_dev_address, inst_compute_node_id)",237,refs/changes/29/619929/2
1,1,nova/virt/powervm/disk/driver.py,Id3a2a1df3746120af38b62fdc902c3c0c44c38ee,549053,6,pass,        pass,        raise NotImplementedError()\n        raise NotImplementedError()\n,242,refs/changes/53/549053/6
1,1,nova/tests/functional/api_sample_tests/test_servers.py,Ia3dea78f16cb3c7081714c4db36e20d5ee76ed7d,745906,2,ADMIN API True,    ADMIN_API = True,\nVALID_DISK_CACHEMODES = [\n,682,refs/changes/06/745906/2
1,1,nova/tests/functional/regressions/test_bug_1550919.py,I5619728d5bd684e9167495dd4550ee4f5fbb87a7,591733,12, Source instance directory s exists ,"                        ""Source instance directory %s exists"" %","                        ""Source instance directory %s does not exist"" %\n                        ""Source instance directory %s does not exist"" %\n",271,refs/changes/33/591733/12
1,1,nova/tests/unit/api/openstack/compute/test_user_data.py,I732e40e0e49af02e16cb161d2564381fa34d41cf,559264,1,lambda a k None ,"                      lambda *a, **k: None)","                      lambda c, i, s: None)\n                      lambda c, i, s: None)\n",110,refs/changes/64/559264/1
1,1,nova/cmd/manage.py,Id1003d758b9d35db051c1d591806276dfb521628,637953,7,if not allocations or not allocations get allocations ,        if not allocations or not allocations.get('allocations'):,        else:\n        if allocations and allocations.get('allocations'):\n            # Check to see if the allocation project_id,1877,refs/changes/53/637953/7
1,1,nova/network/neutronv2/api.py,I510e0707b63da98af143448dd46b771f3ef74624,556334,1, This indicates some unexpected error so log it and continue ,                # This indicates some unexpected error so log it and continue.,                # migrate_instance_finish runs.\n                # We don't raise an exception here because we assume that\n                # port bindings will be updated correctly when,2414,refs/changes/34/556334/1
1,1,nova/scheduler/client/report.py,I4d5f26061594fa9863c1110e6152069e44168cc3,577905,2,include project user False ,"                                     include_project_user=False,",\n        primitive = data(obj.obj_to_primitive(target_version='1.7'))\n,1466,refs/changes/05/577905/2
1,1,nova/network/security_group_api.py,Ib129cb399d1521ad6d18fcf0b8ac9fd793888c81,726898,5,utils reraise exc info ,            utils.reraise(*exc_info),            raise e\n            raise e\n,253,refs/changes/98/726898/5
1,1,nova/api/validation/parameter_types.py,Ic1f2c560a6da815b26fdf770450bbe439d18d4f9,599071,1,def memoize func ,def memoize(func):,def memorize(func):\ndef memorize(func):\n,32,refs/changes/71/599071/1
1,1,nova/virt/powervm/disk/ssp.py,I2691b09d95691915dc1065284d25ad22db41d32b,543023,9,lpar wrap vm get instance wrapper self adapter instance ,"        lpar_wrap = vm.get_instance_wrapper(self._adapter, instance)","        for stg_elem, vios in self._get_bootdisk_iter(instance):\n        for stg_elem, vios in self._get_bootdisk_iter(instance):\n",293,refs/changes/23/543023/9
