1,1,nova/pci/stats.py,I91dd7993395f693c7d26c1caa44fa365f5cbec12,778350,4,fields PciDeviceType VDPA ,                fields.PciDeviceType.VDPA):,"        ):\n            fields.PciDeviceType.VDPA,\n        ):",229,refs/changes/50/778350/4
1,1,nova/virt/libvirt/driver.py,If02a263055376442a116d00c18a1599b436f21d2,741545,2, NOTE lyarwood Volume drivers are now loaded on demand,        # NOTE(lyarwood): Volume drivers are now loaded on-demand,"        self.volume_drivers = ty.Dict[str, volume.LibvirtBaseVolumeDriver]\n        # NOTE(lyarwood): Volume drivers are loaded on-demand\n        self.volume_drivers = ty.Dict[str, volume.LibvirtBaseVolumeDriver]",328,refs/changes/45/741545/2
1,1,nova/conductor/tasks/migrate.py,Ia500b105b9ec70c0d8bd38faa084270b825476eb,680394,2, request or we failed ot claim resources on every alternate,        # request or we failed ot claim resources on every alternate,"        # if we reach this point then none of the hosts was new enough for the\n        # request or we failed to claim resources on every alternate\n        reason = (""Exhausted all hosts available during compute service level """,276,refs/changes/94/680394/2
1,1,nova/tests/functional/test_servers.py,Ib50b6b02208f5bd2972de8a6f8f685c19745514c,676140,18, check that server is allocates from the new host properly,        # check that server is allocates from the new host properly,        # check that server allocates from the new host properly\n        # check that server allocates from the new host properly\n,6616,refs/changes/40/676140/18
1,1,nova/tests/unit/conductor/tasks/test_migrate.py,Ia500b105b9ec70c0d8bd38faa084270b825476eb,680394,2,mock claim resources assert has calls ,        mock_claim_resources.assert_has_calls([,"            self.context, task.reportclient, task.request_spec,\n        mock_claim_resources.assert_called_once_with(\n            self.context, task.reportclient, task.request_spec,",669,refs/changes/94/680394/2
1,1,nova/tests/unit/virt/libvirt/volume/test_quobyte.py,Iba30c49f108af9055de1b1a5c7b1a8406d66cf1a,648093,2,def tearDown self ,    def tearDown(self):,\nPROJECT_READER_OR_SYSTEM_READER = PROJECT_READER + ' or ' + SYSTEM_READER\n,65,refs/changes/93/648093/2
1,1,nova/virt/powervm/mgmt.py,I2691b09d95691915dc1065284d25ad22db41d32b,543023,9,from nova privsep import path as priv path,from nova.privsep import path as priv_path,"\ndef generate_snapshot_metadata(context, image_api, image_id, instance):\n",26,refs/changes/23/543023/9
1,1,nova/tests/functional/test_servers.py,Idf785fd80f9f507c7f8d2bc762b09fe1527aa5f2,676972,17, check that server is allocates from the final host properly while,        # check that server is allocates from the final host properly while,        # check that server allocates from the final host properly while\n        # check that server allocates from the final host properly while\n,6685,refs/changes/72/676972/17
1,1,nova/notifications/objects/image.py,I36ea5d5e677ab3e6c88223b20f5377e9471c55db,698613,2, hw mem encryption image meta pros hw mem encryption ,"        'hw_mem_encryption': ('image_meta_pros', 'hw_mem_encryption'),","        'hw_mem_encryption': ('image_meta_props', 'hw_mem_encryption'),\n        'hw_mem_encryption': ('image_meta_props', 'hw_mem_encryption'),\n",134,refs/changes/13/698613/2
1,1,nova/objects/instance_mapping.py,Ia30405de4bf8e8ac07b942e44b05a868a18eb80a,582536,1,LOG error InstanceMapping not found unable to populate ,"            LOG.error('InstanceMapping not found, unable to populate',",            LOG.error(msg)\n            # This could happen for existing instances before\n            # nova-manage cell_v2 map_instances is run.,192,refs/changes/36/582536/1
1,1,nova/tests/unit/virt/libvirt/test_driver.py,Id9184c4ef301ef48534e4c104b073a2d3731133b,571993,4,mock commit assert not called ,        mock_commit.assert_not_called(),                flags=fakelibvirt.VIR_DOMAIN_BLOCK_REBASE_RELATIVE)\n            mock_commit.assert_not_called()\n,21298,refs/changes/93/571993/4
1,1,nova/tests/functional/libvirt/test_vgpu.py,Ib5dbcee295d8a78b9a55806054de6265c3663343,717975,8,self assertEqual fakelibvirt PGPU<NUMBER> PCI ADDR parent name ,"        self.assertEqual(fakelibvirt.PGPU1_PCI_ADDR, parent_name)",            mdevs = list(mdevs.keys())\n            # Now get the detailed information about this single mdev\n            mdev_info = self.compute1.driver._get_mediated_device_information(,251,refs/changes/75/717975/8
1,1,nova/notifications/base.py,I649d8a27baa8840bc1bb567fef027c749c663432,536243,1,user id context user id ,"        user_id=context.user_id,","        action_initiator = context.user_id,\n        user_id=instance.user_id,\n",407,refs/changes/43/536243/1
1,1,nova/compute/api.py,I69b6e153324a3e5680e096cd714e5d4dd05bae34,680158,4, reject sev instances live migrate ,    @reject_sev_instances('live_migrate'),    @reject_sev_instances(instance_actions.LIVE_MIGRATION)\n    @reject_sev_instances(instance_actions.LIVE_MIGRATION)\n,4460,refs/changes/58/680158/4
1,1,nova/compute/manager.py,Id553242d61eb167a58cdbea75423a5acf3ca7467,714653,4,filters host self host,            filters['host'] = self.host,\n        result = self.cli.heal_allocations(cell_uuid=cell_uuid)\n,679,refs/changes/53/714653/4
1,1,nova/tests/unit/policies/test_quota_sets.py,I5b692cc15d763d4ae4ce8dd1ad1e83a83e0ab434,719128,2, Check that everyone is able to revert the quota to default ,        # Check that everyone is able to revert the quota to default.,        # their own quota.\n        # Check that everyone is able to get the default quota or\n        # their own quota.,49,refs/changes/28/719128/2
1,1,nova/tests/unit/virt/libvirt/test_imagecache.py,Ib2c406327fef2fb4868d8050fc476a7d17706e23,727224,5,from io import StringIO,from io import StringIO,import io\nimport io\n,18,refs/changes/24/727224/5
1,1,nova/tests/functional/test_servers.py,Id4684093e8bdf3b61667490443e3d2f6ed65f4b3,756530,16, start a second compute to show that resources only allocated from,        # start a second compute to show that resources only allocated from,        # start a second compute to show that resources are only allocated from\n        # start a second compute to show that resources are only allocated from\n,6147,refs/changes/30/756530/16
1,1,nova/tests/unit/virt/powervm/test_image.py,Iba75282db968f74ac2e4474c872ba59f9cd77652,568988,1,with mock patch object six moves builtins open mock open ,"        with mock.patch.object(six.moves.builtins, 'open', mock_open):","        with mock.patch.object(six.moves.builtins, 'open', new=mock_open):\n        with mock.patch.object(six.moves.builtins, 'open', new=mock_open):\n",31,refs/changes/88/568988/1
1,1,nova/api/openstack/compute/migrate_server.py,I09cac780b9ee5b5726874d4e6f895fd0cd4bff8c,680395,3,else ,            else:,            # Train\n\n            # TODO(gibi): Remove when nova only supports compute newer than,72,refs/changes/95/680395/3
1,1,nova/scheduler/client/report.py,I9064a2598d773a814269995eed8862d093d9100e,533821,3,self set aggregates for provider uuid newp aggregates ,"            self.set_aggregates_for_provider(uuid, newp.aggregates)","                self.set_traits_for_provider(uuid, newp.traits)\n                self.set_aggregates_for_provider(uuid, newp.aggregates)\n",1357,refs/changes/21/533821/3
1,1,nova/api/openstack/compute/floating_ips.py,I131062ded9ddedc31cf3b448b2c38306b55e874b,703973,3,except Exception as e ,            except Exception as e:,\n        # LiveMigrationTask._find_destination call updated the\n,287,refs/changes/73/703973/3
1,1,nova/image/download/rbd.py,I3032bbe6bd2d6acc9ba0f0cac4d00ed4b4464ceb,574301,1,import logging,import logging,from six.moves import urllib\nimport oslo_log import log as logging\nfrom six.moves import urllib,15,refs/changes/01/574301/1
1,1,nova/db/sqlalchemy/api_migrations/migrate_repo/versions/062_update_aggregate_metadata_key_value_index.py,Ifc020015daff0d2e20d6f8b1069b028115d66b35,587704,1, Change aggregate metadata key index to cover key value ,"    """"""Change aggregate metadata (key) index to cover (key, value).""""""","    """"""Change aggregate_metadata (key) index to cover (key, value).""""""\n    """"""Change aggregate_metadata (key) index to cover (key, value).""""""\n",23,refs/changes/04/587704/1
1,1,nova/tests/unit/virt/libvirt/fakelibvirt.py,I8e349849db0b1a540d295c903f1470917b82fd97,746981,1,FAKE QEMU VERSION <NUMBER>,FAKE_QEMU_VERSION = 4000000,    libvirt_driver.MIN_QEMU_VERSION)\nFAKE_QEMU_VERSION = versionutils.convert_version_to_int(\n    libvirt_driver.MIN_QEMU_VERSION),184,refs/changes/81/746981/1
1,1,nova/scheduler/utils.py,Idd58298a6b01775f962b9bf0a0835f762c8e0ed2,769720,2,self ResourceRequest ,        self = ResourceRequest(),        rr = cls()\n        rr = cls()\n,123,refs/changes/20/769720/2
1,1,nova/scheduler/client/report.py,I35f98f88f8353602e1bfc135f35d1b7bc9ba42a4,653145,2,if resp status code <NUMBER> ,        if resp.status_code == 200:,        if resp:\n        if resp:\n,2362,refs/changes/45/653145/2
1,1,nova/tests/unit/compute/test_multi_cell_list.py,Id1a0538de4cc3235680579ffa0ecf7f4eb24a1dd,594577,6, with an error,        # with an error,\n                if host.cell_uuid != cell_uuid:\n,340,refs/changes/77/594577/6
1,1,nova/scheduler/client/report.py,I66d69327d3361825ca0b44b46744b97ea3069eb1,639653,2, works here as this function re query the allocations ,                # works here as this function (re)query the allocations.,                # works here as this function (re)queries the allocations.\n                # works here as this function (re)queries the allocations.\n,1738,refs/changes/53/639653/2
1,1,nova/conf/scheduler.py,I38f9e0bce5bc58d8b03f562f0de618f1ec38aeb1,556762,2, An integer or float value where the value corresponds to weight multiplier,"* An integer or float value, where the value corresponds to weight multiplier","  for hosts with group soft affinity. Only a positive value is meaningful, as\n* An integer or float value, where the value corresponds to a weight multiplier\n  for hosts with group soft affinity. Only a positive value is meaningful, as",520,refs/changes/62/556762/2
1,1,nova/tests/functional/test_report_client.py,I433700e833f97c0fec946dafc2cdda9d49e1100b,558911,2, proving a WSGI application to be intercepted but it will also need to,"# proving a WSGI application to be intercepted, but it will also need to","# need to be responsible for having a reasonable persistence layer\n# providing a WSGI application to be intercepted, but it will also\n# need to be responsible for having a reasonable persistence layer",22,refs/changes/11/558911/2
1,1,nova/tests/unit/api/openstack/compute/test_images.py,Ifca9d9b766c87d4e1107e9be07223f8d4a0d6794,606845,1, OS EXT IMG SIZE size <NUMBER> ,"                      'OS-EXT-IMG-SIZE:size': '25165824',","                      'OS-EXT-IMG-SIZE:size': 25165824,\n                      'OS-EXT-IMG-SIZE:size': 25165824,\n",82,refs/changes/45/606845/1
1,1,nova/objects/network_request.py,Icb295bbd8c83e2e340a7ac3ecc1f159e0db7c7b1,564442,1, tunneled fields BooleanField nullable True ,"        'tunneled': fields.BooleanField(nullable=True),","        'tunneled': fields.BooleanField(default=False),\n        'tunneled': fields.BooleanField(default=False),\n",44,refs/changes/42/564442/1
1,1,nova/tests/unit/api/openstack/compute/test_server_migrations.py,I4636a8d270ce01c1831bc951c4497ad472bc9aa8,573136,4,class ServerMigrationsTestsV<NUMBER> ServerMigrationsTestsV<NUMBER> ,class ServerMigrationsTestsV263(ServerMigrationsTestsV21):,    wsgi_api_version = '2.64'\nclass ServerMigrationsTestsV264(ServerMigrationsTestsV224):\n    wsgi_api_version = '2.64',322,refs/changes/36/573136/4
1,1,nova/tests/functional/db/api/test_migrations.py,Ifc020015daff0d2e20d6f8b1069b028115d66b35,587704,1,def check <NUMBER> self engine ,"    def _check_062(self, engine):","    def _check_062(self, engine, data):\n    def _check_062(self, engine, data):\n",723,refs/changes/04/587704/1
1,1,nova/conductor/manager.py,Ie49d605c66062d2548241d7e04f5a2a6b98c011e,569498,5, traits required in image meta properties ,                'traits_required' in image_meta.properties):,        if ('properties' not in image_meta or\n                'traits_required' not in image_meta.properties):\n            return,1028,refs/changes/98/569498/5
1,1,nova/virt/libvirt/driver.py,I1c31cfd317d089026fa30d401157f661b6049cd3,666914,6,valid buses blockinfo VALID STORAGE BUS get ,        valid_buses = blockinfo.VALID_STORAGE_BUS.get(,"            ""COMPUTE_STORAGE_BUS"")\n        traits = LibvirtDriver._project_traits(\n            blockinfo.VALID_STORAGE_BUS, CONF.libvirt.virt_type,",9642,refs/changes/14/666914/6
1,1,nova/tests/unit/virt/libvirt/test_driver.py,I8014ea3e047b103086fbba9d4f8b988b8506577e,563984,4,def test live migration copy disk paths self mock xml ,"    def test_live_migration_copy_disk_paths(self, mock_xml,",\n        with mock.patch(\n,9837,refs/changes/84/563984/4
1,1,nova/conf/devices.py,I4681931a6fdd2bfc52b9d5729f84c3994f650fc9,564214,2,If you miss to provide PCI addresses for each section an,"If you miss to provide PCI addresses for each section, an","     device_addresses = 0000:86:00.0\nIf you fail to provide PCI addresses for each section, an\n",45,refs/changes/14/564214/2
1,1,nova/compute/manager.py,Ia01c3602e764a3941d435ed779e311127d33914e,549130,2,attachment id self volume api attachment create ,            attachment_id = self.volume_api.attachment_create(,                attachment_id = self.volume_api.attachment_create(\n                attachment_id = self.volume_api.attachment_create(\n,619,refs/changes/30/549130/2
1,1,nova/conf/libvirt.py,I71bf4c5b5be4dbc89a28bf243b7d11cf1d612ab4,618491,2, Syntax is guest gid host gid count ,                     'Syntax is guest-gid:host-gid:count.',                     'Syntax is guest-gid:host-gid:count. '\n                     'Syntax is guest-gid:host-gid:count. '\n,695,refs/changes/91/618491/2
1,1,nova/tests/functional/test_servers.py,Idf785fd80f9f507c7f8d2bc762b09fe1527aa5f2,676972,17, and the instance is allocation from the source host,        # and the instance is allocation from the source host,        # and the instance allocates from the source host\n        # and the instance allocates from the source host\n,6750,refs/changes/72/676972/17
1,1,nova/api/openstack/placement/objects/consumer.py,Id609789ef6b4a4c745550cde80dd49cabe03869a,567678,3,def create incomplete consumers ctx ,def create_incomplete_consumers(ctx):,"def create_incomplete_consumers(ctx, batch_size):\ndef create_incomplete_consumers(ctx, batch_size):\n",29,refs/changes/78/567678/3
1,1,nova/compute/resource_tracker.py,I880e9daa6b97d73a0e33ac9a5bdae9bacfa89aaa,585928,1,cn memory mb used CONF reserved host ,        cn.memory_mb_used = CONF.reserved_host_,        cn.memory_mb_used = CONF.reserved_host_memory_mb\n        cn.memory_mb_used = CONF.reserved_host_memory_mb\n,1159,refs/changes/28/585928/1
1,1,nova/compute/manager.py,Ia9ea1e164fb3b4a386405538eed58d94ad115172,563505,6,from concurrent import futures as c futures,from concurrent import futures as c_futures,"from concurrent import futures\n# If py2, concurrent.futures comes from the futures library otherwise it\n# comes from the py3 standard library.",30,refs/changes/05/563505/6
1,1,nova/compute/manager.py,Ifd76289964d513e9544544e5787f5f8999589475,589085,2,allocations self reportclient get allocations for consumer ,        allocations = self.reportclient.get_allocations_for_consumer(,"            context, instance.uuid)['allocations']\n        allocations = self.reportclient.get_allocs_for_consumer(\n            context, instance.uuid)['allocations']",4675,refs/changes/85/589085/2
1,1,nova/conf/libvirt.py,I06e1f7429c056c4ce8506b10359762e457dbb2a0,670298,2,hardware Specifying models with CPU features that are emulated by qemu could,hardware. Specifying models with CPU features that are emulated by qemu could,.. note::\n    Be careful to only specify models which can be fully supported in\n    hardware.,569,refs/changes/98/670298/2
1,1,nova/tests/functional/libvirt/test_vgpu.py,I018762335b19c98045ad42147080203092b51c27,712741,2,current host host<NUMBER> ,    current_host = 'host1',"    _current_host = _DEFAULT_HOST\n    # Since we run all computes by a single process, we need to identify which\n    # current compute service we use at the moment.",40,refs/changes/41/712741/2
1,1,nova/scheduler/request_filter.py,Ibf62c5398a95c75fde815309e7a4f82f1bd9649c,657629,1,from oslo utils import excutils,from oslo_utils import excutils,\n            # NOTE(johnthetubaguy) this should eventually fail a\n,17,refs/changes/29/657629/1
1,1,nova/tests/unit/compute/test_compute.py,I49618a6dafbe00b9516ff37172b6aea68a42deba,567522,1,self assertFalse mock warning called ,        self.assertFalse(mock_warning.called),        mock_warning.assert_not_called()\n        mock_warning.assert_not_called()\n,3582,refs/changes/22/567522/1
1,1,nova/compute/manager.py,If3e79cd71b6d0f6e535ff86b27483c137a78fee9,757111,3,LOG warning Failed to remove resource allocation ,                LOG.warning('Failed to remove resource allocation ',"                    'for instance. Error: %(error)s',\n                LOG.warning(\n                    'Failed to remove resource allocation of port %(port_id)s '",7464,refs/changes/11/757111/3
1,1,nova/virt/libvirt/migration.py,I91627412744dad65122240f0aeb7a57ee85ba313,551370,20, information for the vif Can you even have different,                # information for the vif? Can you even have different,\n        # Run the legacy volume attachment data migration in a background\n,256,refs/changes/70/551370/20
1,1,nova/compute/manager.py,Iee44ea525deb0b43ae43df3ba08c95ea8a4e317c,742863,4,x for x in block devices if,            x for x in block_devices if,            if driver_block_device.is_block_device_mapping(x)\n            x for x in block_devices\n            if driver_block_device.is_block_device_mapping(x),1917,refs/changes/63/742863/4
1,1,nova/virt/libvirt/driver.py,I5c346e690148678a2f0dc63f4f516a944c3db8cd,687856,3,instance instance flavor ,"                instance, instance.flavor)","        # sort instance.migration_context.new_resources, and use it bring\n        # destination ordered resources to source host, e.g. vpmem resouce\n        self._sort_migrating_resources(",8027,refs/changes/56/687856/3
1,1,nova/conductor/tasks/migrate.py,Ia500b105b9ec70c0d8bd38faa084270b825476eb,680394,2, if we reach this point then non of the hosts was new enough for the,        # if we reach this point then non of the hosts was new enough for the,"        reason = (""Exhausted all hosts available during compute service level ""\n        # if we reach this point then none of the hosts was new enough for the\n        # request or we failed to claim resources on every alternate",275,refs/changes/94/680394/2
1,1,nova/tests/unit/api/openstack/compute/test_simple_tenant_usage.py,I3594e66e62b82048062ad4fc502a354e2a7086da,711113,3,def test calculate virtual machine usage hours vm stop before period ,    def test_calculate_virtual_machine_usage_hours_vm_stop_before_period(,    def test_default_behavior_when_stopping_vm_before_search_period(self):\n    def test_default_behavior_when_stopping_vm_before_search_period(self):\n,645,refs/changes/13/711113/3
1,1,nova/tests/unit/virt/libvirt/test_host.py,I2c7b183fcb01f3cb67cb1c8b8bea7aaf5ce424f3,770532,7, listAllDevices as mock list all devices ,"                ""listAllDevices"") as mock_list_all_devices:","            mock.patch.object(\n                self.host.get_connection(), ""listAllDevices""),\n            mock.patch.object(self.host, ""_get_pcinet_info""),",1169,refs/changes/32/770532/7
