label,status,file_dir,change_id,change_num,patch_set,shaped_code,before_code,after_code,line,ref
1,1,nova/compute/api.py,I7f3cbc57a374b2f271018a2f6ef33ef579798db8,780333,1, so this proably works but block evac with vdpa until tested ,        # so this proably works but block evac with vdpa until tested.,"        if instance.has_vdpa_ports():\n        # so this probably works, but we block evac with vdpa until tested.\n        if instance.has_vdpa_ports():",5293,refs/changes/33/780333/1
1,1,nova/cmd/status.py,I0dc2044286dbe78314c650a92c4654f7f50642d2,603499,2,return upgradecheck UpgradeCheckResult upgradecheck UpgradeCheckCode FAILURE msg ,"            return upgradecheck.UpgradeCheckResult(upgradecheck.UpgradeCheckCode.FAILURE, msg)","            return upgradecheck.Result(upgradecheck.Code.FAILURE, msg)\n            return upgradecheck.Result(upgradecheck.Code.FAILURE, msg)\n",115,refs/changes/99/603499/2
1,1,nova/tests/unit/virt/libvirt/test_driver.py,I0ea3a0a1342ef53ed891c145561eb7402f553a8b,728481,4,objects InstanceNUMACell ,                           objects.InstanceNUMACell(,"                id=0, cpuset=set([0]), pcpuset=set(), memory=1024),\n            objects.InstanceNUMACell(\n",3794,refs/changes/81/728481/4
1,1,nova/tests/functional/api/openstack/placement/fixtures/placement.py,I126ada549d3879f89d1ec64b743da14807a39351,568359,1,it s teardown ,    it's teardown.,    its teardown.\n    its teardown.\n,28,refs/changes/59/568359/1
1,1,nova/api/openstack/placement/objects/resource_provider.py,I89d2892fabb6273bfa793f4a06dced80b68e93d5,588350,1,LOG debug s d of d returned d matches ,"            LOG.debug(""%s (%d of %d) returned %d matches"",","                      str(request), str(suffix), len(alloc_reqs))\n            LOG.debug(""%s (suffix '%s') returned %d matches"",\n                      str(request), str(suffix), len(alloc_reqs))",4043,refs/changes/50/588350/1
1,1,nova/compute/manager.py,Ia1b3ab0b66fdaf569f6c7a09510f208ee28725b2,680107,1,if numa topology not in instance or,            if ('numa_topology' not in instance or,\n            if not (instance.numa_topology and\n                        instance.numa_topology.cpu_pinning_requested):,827,refs/changes/07/680107/1
1,1,nova/cmd/manage.py,I6b80021a2f90d3379c821dc8f02a72f350169eb3,774896,4,print str e ,            print(_(str(e))),            print(str(e))\n            print(str(e))\n,2833,refs/changes/96/774896/4
1,1,nova/policies/base.py,I999f8d84e10ff1a57c1ff6b717801b495032e358,645452,8,PROJECT MEMBER OR SYSTEM ADMIN PROJECT MEMBER or SYSTEM ADMIN,PROJECT_MEMBER_OR_SYSTEM_ADMIN = PROJECT_MEMBER + 'or' + SYSTEM_ADMIN,PROJECT_READER_OR_SYSTEM_READER = PROJECT_READER + ' or ' + SYSTEM_READER\nPROJECT_MEMBER_OR_SYSTEM_ADMIN = PROJECT_MEMBER + ' or ' + SYSTEM_ADMIN\nPROJECT_READER_OR_SYSTEM_READER = PROJECT_READER + ' or ' + SYSTEM_READER,35,refs/changes/52/645452/8
1,1,nova/tests/functional/api/openstack/placement/test_direct.py,I075785abcd4f4a8e180959daeadf215b9cd175c8,572576,1,with direct PlacementDirect CONF as url session ,"        with direct.PlacementDirect(CONF) as (url, session):",            resp = client.get('/resource_providers')\n        with direct.PlacementDirect(CONF) as client:\n            resp = client.get('/resource_providers'),48,refs/changes/76/572576/1
1,1,nova/tests/unit/virt/libvirt/test_host.py,I2c7b183fcb01f3cb67cb1c8b8bea7aaf5ce424f3,770532,7,def test get vdpa nodedev by address self ,    def test_get_vdpa_nodedev_by_address(self):,    def test_get_vdpa_device_path(self):\n    def test_get_vdpa_device_path(self):\n,1245,refs/changes/32/770532/7
1,1,nova/conf/scheduler.py,I38f9e0bce5bc58d8b03f562f0de618f1ec38aeb1,556762,2,for hosts with group soft affinity Only a positive value are meaningful as,"  for hosts with group soft affinity. Only a positive value are meaningful, as","* An integer or float value, where the value corresponds to a weight multiplier\n  for hosts with group soft affinity. Only a positive value is meaningful, as\n",521,refs/changes/62/556762/2
1,1,nova/conductor/manager.py,I9358cc3cff44b81b5ce8f9917417282f83860c5b,566470,1, param exception the thrown exception in case of failure ,    :param exception: the thrown exception (in case of failure),    :param exc: the raised exception (in case of failure)\n    :param exc: the raised exception (in case of failure)\n,102,refs/changes/70/566470/1
1,1,nova/conductor/manager.py,Ie49d605c66062d2548241d7e04f5a2a6b98c011e,569498,5,LOG warning ,                LOG.warning(,        if missing_traits:\n            LOG.error(\n,1053,refs/changes/98/569498/5
1,1,nova/virt/block_device.py,I4205c00311f389907dcc390869414687ac03b7f5,682378,1,context instance volume api self volume size wait func ,"                context, instance, volume_api, self.volume_size, wait_func,","                wait_func=wait_func, snapshot=snapshot)\n                context, instance, volume_api, self.volume_size,\n                wait_func=wait_func, snapshot=snapshot)",761,refs/changes/78/682378/1
1,1,nova/tests/unit/virt/libvirt/fakelibvirt.py,I2c7b183fcb01f3cb67cb1c8b8bea7aaf5ce424f3,770532,7,VIR CONNECT LIST NODE DEVICES CAP VDPA <NUMBER>,VIR_CONNECT_LIST_NODE_DEVICES_CAP_VDPA = 131072,VIR_CONNECT_LIST_NODE_DEVICES_CAP_VDPA = 1 << 17\nVIR_CONNECT_LIST_NODE_DEVICES_CAP_VDPA = 1 << 17\n,184,refs/changes/32/770532/7
1,1,nova/scheduler/filters/core_filter.py,Ibfbfdae9e6ec93f772631a84e8969f4e11da8aee,673496,1, allocation ratios either per host in the nova conf ,                    'allocation ratios either per host in the nova.conf',                    'filter_scheduler driver. Operators should define cpu '\n                    'allocation ratios either per host in the nova.conf '\n                    'or via the placement API.'),40,refs/changes/96/673496/1
1,1,nova/virt/libvirt/driver.py,Ia8a35ecff20911471a5c353c0b55be86f2e4e21a,631237,1, param cells An list of LibvirtConfigCapsNUMACell objects ,        :param cells: An list of ``LibvirtConfigCapsNUMACell`` objects.,        :param cells: A list of ``LibvirtConfigCapsNUMACell`` objects.\n        :param cells: A list of ``LibvirtConfigCapsNUMACell`` objects.\n,6422,refs/changes/37/631237/1
1,1,nova/image/glance.py,I20913201cf945a7fde1f9e6264c415e1235db7b9,738738,2, param write image Write the image file provided by image chunks ,        :param write_image: Write the image file provided by image_chunks.,        :param dst_path: Filepath to transfer the image file to.\n        :param dst_path: Filepath to transfer the image file to.\n,342,refs/changes/38/738738/2
1,1,nova/api/openstack/compute/views/servers.py,I55bf78e63f68f8167249edc3327b024d9ecb0af2,679181,1,unknown only None,                unknown_only = None,"                # API.\n                unknown_only = self._get_unknown_only(context)\n                # If we're not allowed by policy to show host status at all,",416,refs/changes/81/679181/1
1,1,nova/tests/functional/db/test_instance_mapping.py,Ia30405de4bf8e8ac07b942e44b05a868a18eb80a,582536,1,self context <NUMBER> <NUMBER> <NUMBER> <NUMBER> <NUMBER> ,"            self.context, '00000000-0000-0000-0000-000000000000')","        self.assertEqual(uuids[5], marker.project_id)\n            self.context, instance_mapping.FAKE_UUID)\n        self.assertEqual(uuids[5], marker.project_id)",170,refs/changes/36/582536/1
1,1,nova/compute/resource_tracker.py,Ieeaad9783e0ff93377fbc6c7932618d2fac8946a,615677,2, it s not already there ,        # it's not already there.,"        # By clearing the report client's cache, we force _update to go looking\n        # for the compute node provider's record in placement, creating it if\n        # it's not already there. Otherwise _update could skip querying",808,refs/changes/77/615677/2
1,1,nova/tests/unit/virt/libvirt/test_driver.py,I0ea3a0a1342ef53ed891c145561eb7402f553a8b,728481,4,mock patch object ,"                mock.patch.object(host.Host, 'has_min_version',","            mock.patch.object(host.Host, 'has_min_version', return_value=True),\n            mock.patch.object(host.Host, 'has_min_version', return_value=True),\n",3905,refs/changes/81/728481/4
1,1,nova/tests/unit/virt/libvirt/test_driver.py,I0ea3a0a1342ef53ed891c145561eb7402f553a8b,728481,4,mock patch object ,                mock.patch.object(,"                return_value=instance_topology),\n            mock.patch.object(\n                objects.InstanceNUMATopology, ""get_by_instance_uuid"",",3905,refs/changes/81/728481/4
1,1,nova/compute/manager.py,I038867c4094d79ae4a20615ab9c9f9e38fcc2e0a,623543,39,dev rp name dev rp name ,                dev_rp_name = dev_rp['name'],\n                dev_rp_name = self.reportclient.get_resource_provider_name(\n,2160,refs/changes/43/623543/39
1,1,nova/api/openstack/placement/handlers/resource_provider.py,Ic7f4ea6f97f6bd434cf7338dec9ce7db40a300a6,595453,1,<NUMBER> microversions <NUMBER> <NUMBER> response with an empty body,    200 (microversions 1.20 - ) response with an empty body,    On success return a 201 response with an empty body\n    (microversions 1.0 - 1.19) or a 200 response with a\n    payload representing the newly created resource provider,80,refs/changes/53/595453/1
1,1,nova/api/metadata/base.py,Iebf54d06cb1a2043bf13685c95c2589d35e04b24,580742,2,seen ,        seen = [],        seen = set()\n        seen = set()\n,498,refs/changes/42/580742/2
1,1,nova/scheduler/weights/ram.py,I6e15c6507d037ffe263a460441858ed454b02504,628163,1,return utils get weight multiplier host state cpu ,"        return utils.get_weight_multiplier(host_state, 'cpu')","            CONF.filter_scheduler.ram_weight_multiplier)\n        return utils.get_weight_multiplier(\n            host_state, 'ram_weight_multiplier',",35,refs/changes/63/628163/1
1,1,nova/tests/unit/virt/test_hardware.py,Id3441073adde563a568c9550df53690d1e6c998a,674395,1,pinned cpus set ,"            pinned_cpus=set([]),","            pinned_cpus=set(),\n            pinned_cpus=set(),\n",2772,refs/changes/95/674395/1
1,1,nova/compute/resource_tracker.py,I39d93dbf8552605e34b9f146e3613e6af62a1774,576462,1, of auto correction allocations ,"                ""of auto-correction allocations. "")","                ""auto-correction of allocations."")\n                ""auto-correction of allocations."")\n",1232,refs/changes/62/576462/1
1,1,nova/policies/volumes.py,I37fa825b0e915e83da7023564a29811dcdfa058d,742777,1,This API is proxy calls to the Volume service This is deprecated ,"This API is proxy calls to the Volume service. This is deprecated."""""",","This API is a proxy call to the Volume service. It is deprecated."""""",\nThis API is a proxy call to the Volume service. It is deprecated."""""",\n",42,refs/changes/77/742777/1
1,1,nova/tests/unit/virt/powervm/tasks/test_storage.py,I2691b09d95691915dc1065284d25ad22db41d32b,543023,9, Management Partition is VIOS and Novalink hosted storage,        # Management Partition is VIOS and Novalink hosted storage,        # Management Partition is VIOS and NovaLink hosted storage\n        # Management Partition is VIOS and NovaLink hosted storage\n,233,refs/changes/23/543023/9
1,1,nova/scheduler/utils.py,I32d9704fe19bc85e06a613b6dffb99f00003315e,641289,1, There are more than one numbered request group in the ,"                ""There are more than one numbered request group in the ""","                ""There is more than one numbered request group in the ""\n                ""There is more than one numbered request group in the ""\n",311,refs/changes/89/641289/1
1,1,nova/policies/remote_consoles.py,Ic81da0ebc23d6526c5ca2d9d98159e07f3e53822,716484,2,This policy is for POST remote consoles API and below Server actions APIs,This policy is for POST /remote-consoles API and below Server actions APIs,This policy is for ``POST /remote-consoles`` API and below Server actions APIs\nThis policy is for ``POST /remote-consoles`` API and below Server actions APIs\n,30,refs/changes/84/716484/2
1,1,nova/tests/unit/policies/test_attach_interfaces.py,I8a91db6c13710b693b3b4a3d002fd2ac09fcf3f3,705126,8,It defines the set of context with scopped token,    It defines the set of context with scopped token,    It defines the set of context with scoped token\n    It defines the set of context with scoped token\n,114,refs/changes/26/705126/8
1,1,nova/scheduler/filters/core_filter.py,Ibfbfdae9e6ec93f772631a84e8969f4e11da8aee,673496,1, filter scheduler driver Operators should define cpu ,                    'filter_scheduler driver. Operators should define cpu',                    'using the Placement service when using the '\n                    'filter_scheduler driver. Operators should define cpu '\n                    'allocation ratios either per host in the nova.conf ',39,refs/changes/96/673496/1
1,1,nova/tests/functional/api_sample_tests/test_attach_interfaces.py,I09420ff7134874dfe4dc399931c7740e81ecc2d0,631948,4, Tests for the <NUMBER> <NUMBER> microversion in the os attach interfaces API,"    """"""Tests for the 2.68 microversion in the os-attach-interfaces API","class AttachInterfacesSampleV268JsonTest(AttachInterfacesSampleJsonTest):\n    """"""Tests for the 2.68 microversion in the os-interface API\n",259,refs/changes/48/631948/4
1,1,nova/api/openstack/api_version_request.py,I2f8b4a12a088b9ed96b428eafde2e0c478fb1db5,557145,4, <NUMBER> <NUMBER> Add host hostId to show instance action event API ,    * 2.61 - Add host/hostId to show instance action event API.,    * 2.61 - Add ``host`` and ``hostId`` to show instance action event API.\n    * 2.61 - Add ``host`` and ``hostId`` to show instance action event API.\n,146,refs/changes/45/557145/4
1,1,nova/db/api.py,I7cdb79003b89ac400b169272f77eafdf210b3d17,614672,3,return IMPL block device mapping root by instance context ,"    return IMPL.block_device_mapping_root_by_instance(context,","    return IMPL.block_device_mapping_get_root_by_instance(context,\n    return IMPL.block_device_mapping_get_root_by_instance(context,\n",1244,refs/changes/72/614672/3
1,1,nova/tests/unit/virt/libvirt/test_driver.py,I0ea3a0a1342ef53ed891c145561eb7402f553a8b,728481,4,objects InstanceNUMACell ,                objects.InstanceNUMACell(,"                cpu_pinning={2: 6, 3: 7},\n            objects.InstanceNUMACell(\n                id=2, cpuset=set(), pcpuset=set([0, 1]),",3794,refs/changes/81/728481/4
1,1,nova/virt/libvirt/driver.py,I70310a6769f02ab13c7495ae2075ae6890df728a,687808,1,raise exception InternalError ,                raise exception.InternalError(,"                    reason=m % {'ret': e, 'u': u})\n                raise exception.InvalidCPUInfo(\n                    reason=m % {'ret': e, 'u': u})",8290,refs/changes/08/687808/1
1,1,nova/pci/request.py,I9ba475e91b8283f063db446de74d3e4b2de002c5,619929,2, the given VIF PCI address s vif pci dev address ,"                      "" the given VIF PCI address: %s"", vif_pci_dev_address)","                      vif_pci_dev_address, inst_compute_node_id)\n                      "" the given VIF PCI address: %s on Node(ID=%d)"",\n                      vif_pci_dev_address, inst_compute_node_id)",237,refs/changes/29/619929/2
1,1,nova/tests/functional/test_servers.py,Iefff121640e04abdbb6a4ae546c447f168dc8af9,604084,3, Runs all the server moving tests while the computes has nested trees ,"    """"""Runs all the server moving tests while the computes has nested trees.","    The servers still do not request resources from any child provider though.\n    """"""Runs all the server moving tests while the computes have nested trees.\n    The servers still do not request resources from any child provider though.",4844,refs/changes/84/604084/3
1,1,nova/tests/functional/regressions/test_bug_1550919.py,I5619728d5bd684e9167495dd4550ee4f5fbb87a7,591733,12, Source instance directory s exists ,"                        ""Source instance directory %s exists"" %","                        ""Source instance directory %s does not exist"" %\n                        ""Source instance directory %s does not exist"" %\n",271,refs/changes/33/591733/12
1,1,nova/tests/unit/api/openstack/compute/test_user_data.py,I732e40e0e49af02e16cb161d2564381fa34d41cf,559264,1,lambda a k None ,"                      lambda *a, **k: None)","                      lambda c, i, s: None)\n                      lambda c, i, s: None)\n",110,refs/changes/64/559264/1
1,1,nova/conf/hyperv.py,Ib9f735216773224f91ac7f49fbe2eee119670872,652104,5, Path of qemu img command DRIVELETTER PATH TO QEMU IMG COMMAND ,* Path of qemu-img command (DRIVELETTER:\\PATH\\TO\\QEMU-IMG\\COMMAND).,* Path of qemu-img command (DRIVELETTER:\PATH\TO\QEMU-IMG\COMMAND).\n* Path of qemu-img command (DRIVELETTER:\PATH\TO\QEMU-IMG\COMMAND).\n,169,refs/changes/04/652104/5
1,1,nova/cmd/manage.py,Id1003d758b9d35db051c1d591806276dfb521628,637953,7,if not allocations or not allocations get allocations ,        if not allocations or not allocations.get('allocations'):,        else:\n        if allocations and allocations.get('allocations'):\n            # Check to see if the allocation project_id,1877,refs/changes/53/637953/7
1,1,nova/cmd/status.py,I0dc2044286dbe78314c650a92c4654f7f50642d2,603499,2,return upgradecheck UpgradeCheckResult upgradecheck UpgradeCheckCode FAILURE msg ,"                return upgradecheck.UpgradeCheckResult(upgradecheck.UpgradeCheckCode.FAILURE, msg)","                return upgradecheck.Result(upgradecheck.Code.FAILURE, msg)\n                return upgradecheck.Result(upgradecheck.Code.FAILURE, msg)\n",115,refs/changes/99/603499/2
1,1,nova/api/validation/parameter_types.py,Ic1f2c560a6da815b26fdf770450bbe439d18d4f9,599071,1,def memoize func ,def memoize(func):,def memorize(func):\ndef memorize(func):\n,32,refs/changes/71/599071/1
