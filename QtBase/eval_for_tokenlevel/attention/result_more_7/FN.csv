1,1,src/gui/kernel/qguiaction.cpp,Ic490a5e3470939ee8af612d46ff41d4c8c91fbdf,265909,2, property QAction iconText,    \property QAction::iconText,    \property QGuiAction::iconText\n    \property QGuiAction::iconText\n,635,refs/changes/09/265909/2
1,1,src/corelib/itemmodels/qabstractitemmodel.h,I2f6293ecf1b3150b9f407a7349579c17e650c340,303307,2,MatchFixedString ,"        MatchFixedString,","        MatchRegularExpression = 4,\n        MatchWildcard = 5,\n#endif",72,refs/changes/07/303307/2
1,1,src/corelib/io/qwindowspipereader.cpp,I66443c3021d6ba98639a214c3e768be97d2cf14b,331232,3, internal,    \internal,"\n    // Note that signals are not emitted in the call below, as the caller\n",148,refs/changes/32/331232/3
1,1,src/corelib/kernel/qwineventnotifier.cpp,I2fb1ba7254ecfd502a22c706404f92dd1bc3a584,340602,1, Wait for outstanding callback to complete ,    // Wait for outstanding callback to complete.,\nstatic const int bufferSize = 2048; // 2 paths (mount point+device) and metainfo;\n,283,refs/changes/02/340602/1
1,1,src/network/ssl/qsslsocket_openssl_symbols.cpp,Ibd8810c0070db7e6b3ead6d6a569facdab88b646,303108,1,QDuplicateTracker QString paths QSet QString data ,    QDuplicateTracker<QString> *paths = (QSet<QString> *)data;,    QDuplicateTracker<QString> *paths = (QDuplicateTracker<QString> *)data;\n    QDuplicateTracker<QString> *paths = (QDuplicateTracker<QString> *)data;\n,573,refs/changes/08/303108/1
1,1,src/tools/moc/moc.cpp,I3519fe20233d473f34a24ec9589d045cdd162a12,286855,1,const int VersionComponentBits <NUMBER> ,    const int VersionComponentBits = 12;,    const int VersionComponentBits = 8;\n    const int VersionComponentBits = 8;\n,383,refs/changes/55/286855/1
1,1,src/corelib/kernel/qcoreevent.h,I3106dd6ecb2367fef6f8012c28266e1b4b1abf4b,321017,3,quint<NUMBER> reserved <NUMBER> ,    quint32 reserved : 10;,    quint16 m_singlePointEvent : 1;\n    quint16 reserved : 10;\n,332,refs/changes/17/321017/3
1,1,src/gui/math3d/qmatrix4x4.h,Ia64d934d3dda3e718357cf4e3c32866a613a4722,302189,1,int flags const return flagBits ,    int flags() const { return flagBits; },"\n//                this, SLOT(callFinishedSlot(QDBusPendingCallWatcher*)));\n",189,refs/changes/89/302189/1
1,1,src/corelib/kernel/qmetatype.h,I286fe173b43a495dbda8faa151a93895b4fd22e4,334549,1,const int aId ai ai a idHelper ,        const int aId = ai ? ai : a.idHelper();,        const int aId = a.id();\n        const int bId = b.id();\n,498,refs/changes/49/334549/1
1,1,src/gui/kernel/qpalette.cpp,Ibfa925f3e4cb0be89915607eee142926e05000b5,282369,1,QStringLiteral <NUMBER> <NUMBER> arg ,"                QStringLiteral(""%1:[%2]"").arg(","            roleString += QString::fromUtf8(roleEnum.valueToKey(cr)) + QStringLiteral("":["") +\n                          groupString + QStringLiteral(""],"");\n",1253,refs/changes/69/282369/1
1,1,src/corelib/kernel/qproperty.cpp,I56c0bce15af8121159630b5c0922c287c15b7618,331538,1,The change handler will be called whenever the value held by the,  The change handler will be called whenever the value held by the,  \snippet code/src_corelib_kernel_qproperty.cpp 4\n  The dirty handler will be called whenever the property transitions from\n  non-dirty state to dirty state. It is marked as dirty,1037,refs/changes/38/331538/1
1,1,src/gui/text/qtextengine.cpp,Ief1a97c52544b271556811816f7804074bd336df,300004,1,layoutData string QLatin<NUMBER>Char char <NUMBER>xA<NUMBER> ,            layoutData->string += QLatin1Char(char(0xA7));,            layoutData->string += QLatin1Char('\xA7');\n            layoutData->string += QLatin1Char('\xA7');\n,1890,refs/changes/04/300004/1
1,1,src/dbus/doc/snippets/code/src_qdbus_qdbusabstractinterface.cpp,Idfe86ae0f38e43678cc5e746e30e5eeaf8eb72dc,302240,5,QDBusInterface interface ,    QDBusInterface *interface;,class Abstract_DBus_Interface : public QObject\n{\n    Q_OBJECT,63,refs/changes/40/302240/5
1,1,src/corelib/time/qdatetime.cpp,I6a4390df90945af74a5eac2f0a752febd925ad62,293624,3,if words at <NUMBER> endsWith u ,"        if (words.at(0).endsWith(u"","")) {","        if (words.at(0).endsWith(u',')) {\n        if (words.at(0).endsWith(u',')) {\n",179,refs/changes/24/293624/3
1,1,src/plugins/platforms/qnx/qqnxsimpleclipboard.h,I30e30a4d964697a44691363a181cdcef778da51b,313733,1,QVariant retrieveData const QString mimetype QVariant Type preferredType const ,"    QVariant retrieveData(const QString &mimetype, QVariant::Type preferredType) const;","    QVariant retrieveData(const QString &mimetype, QVariant::Type preferredType) const override;\n    QVariant retrieveData(const QString &mimetype, QVariant::Type preferredType) const override;\n",71,refs/changes/33/313733/1
1,1,tests/benchmarks/corelib/text/qregularexpression/main.cpp,Idef775ef6cf9f9ded3ce7ba5b85e460571d12756,325260,1,QTest newRow non empty article w noun w ,"    QTest::newRow(""non-empty"") << ""(?<article>\\w+) (?<noun>\\w+)""","    QTest::newRow(""non-empty"") << nonEmptyPattern << nonEmptyPatternOptions;\n    QTest::newRow(""non-empty"") << nonEmptyPattern << nonEmptyPatternOptions;\n",64,refs/changes/60/325260/1
1,1,src/corelib/kernel/qobject.cpp,I900f6980a2cd8a5f72c3ad18697b5dd49100217d,249600,3,if signal index <NUMBER> connections ,    if (signal_index < 0 || !connections),    if (signal_index < 0 || !cd)\n    ConnectionData *cd = connections.load();\n    if (signal_index < 0 || !cd),265,refs/changes/00/249600/3
1,1,src/gui/kernel/qevent.cpp,I740e4e40165b7bc41223d38b200bbc2b403e07b6,301583,24,for const QEventPoint point m touchPoints ,    for (const QEventPoint &point : m_touchPoints),        QMutableEventPoint::from(point).setParent(this);\n    for (QEventPoint &point : m_touchPoints)\n        QMutableEventPoint::from(point).setParent(this);,4191,refs/changes/83/301583/24
1,1,src/corelib/io/qresource.cpp,Ia255052ea33e7d7fccb0627accd20315bbe5d393,303511,1,qPrintable path ,                 qPrintable(path));,"        qWarning(""QResource::addResourceSearchPath: Search paths must be absolute (start with /) [%ls]"",\n                 qUtf16Printable(path));\n",818,refs/changes/11/303511/1
1,1,src/plugins/platforms/windows/qwindowsscreen.cpp,I90b0b7563efc35c9bace07ccb3996350a957e8e5,266861,6,if result ERROR SUCCESS ,    if (result == ERROR_SUCCESS) {,"\n    return QtPrivate::QStringList_join_qst(self(), sep.data(), sep.size());\n",102,refs/changes/61/266861/6
1,1,src/corelib/global/qrandom.h,I3eb349b832c14610895efffd16356927fe78fd02,314217,1, algorithm could potentially run forever but the worst case cenario only,"    // algorithm could potentially run forever, but the worst case cenario only","    // will never need, then check if it's higher than ""highest"". The number of\n    // times the loop will run is unbounded but the probability of terminating\n    // is better than 1/2 on each iteration. Therefore, the average loop count",276,refs/changes/17/314217/1
1,1,examples/widgets/tools/codecs/encodingdialog.cpp,I9141320225037e1bc6b7f920bf01a9d0144fdac2,268730,2,QT TRANSLATE NOOP EncodingDialog wchar t on Windows char<NUMBER> t ,"    QT_TRANSLATE_NOOP(""EncodingDialog"", ""wchar_t on Windows, char16_t""),","    QT_TRANSLATE_NOOP(""EncodingDialog"", ""wchar_t on Windows, char16_t everywhere""),\n    QT_TRANSLATE_NOOP(""EncodingDialog"", ""wchar_t on Windows, char16_t everywhere""),\n",251,refs/changes/30/268730/2
1,1,src/plugins/platforms/windows/qwindowswindow.cpp,Id26b5070fe18ea8c85e91ec3b088baa585319e9b,321069,5,if QOperatingSystemVersion current QOperatingSystemVersion Windows<NUMBER> ,    if (QOperatingSystemVersion::current() < QOperatingSystemVersion::Windows10) {,    if (QOperatingSystemVersion::current() < QOperatingSystemVersion::Windows10)\n    if (QOperatingSystemVersion::current() < QOperatingSystemVersion::Windows10)\n,1847,refs/changes/69/321069/5
1,1,src/gui/kernel/qevent.cpp,Id96e837c5f7487f367a07f73e807eac5aae65bf1,264021,1,Returns the mouse cursor s position relative to the receiving scene or window ,    Returns the mouse cursor's position relative to the receiving scene or window.,    Returns the mouse cursor's position relative to the receiving window.\n    Returns the mouse cursor's position relative to the receiving window.\n,151,refs/changes/21/264021/1
1,1,src/corelib/io/qwindowspipereader.cpp,I66443c3021d6ba98639a214c3e768be97d2cf14b,331232,3, internal,    \internal,"\n    // Note that signals are not emitted in the call below, as the caller\n",148,refs/changes/32/331232/3
1,1,src/corelib/io/qprocess_unix.cpp,Ia8b65350cd5d49debca9fffd15f801161363aea7,292539,1, this is a virtual call and it base behavior is to do nothing ,"    // this is a virtual call, and it base behavior is to do nothing.","    // this is a virtual call, and its base behavior is to do nothing.\n    // this is a virtual call, and its base behavior is to do nothing.\n",380,refs/changes/39/292539/1
1,1,src/corelib/kernel/qproperty.h,I9bb49e457165ddc1e4c8bbdf3d3c9fbf5ff27e94,316302,7,quintptr nodeState ,        quintptr nodeState;,        QPropertyObserver **nodeState;\n        QPropertyObserver **nodeState;\n,261,refs/changes/02/316302/7
1,1,src/3rdparty/forkfd/forkfd_c11.h,Iec9c051acd73484c8d94fffd15b9985fe545e8b5,270164,1,using std atomic int ,using std::atomic_int;,typedef std::atomic_int ffd_atomic_int;\ntypedef std::atomic_int ffd_atomic_int;\n,39,refs/changes/64/270164/1
1,1,src/corelib/time/qdatetime.cpp,I81afda9063fa232d06841d63f69e19b49f8083f3,314629,2, note Day and month names are given in English ,    \note Day and month names are given in English.,"    QLocale::system().toDateTime().\n    \note Day and month names as well as AM/PM indication are given in English (C locale).\n    If localized month and day names and localized forms of AM/PM are used, use",1130,refs/changes/29/314629/2
1,1,tests/auto/widgets/util/qsystemtrayicon/tst_qsystemtrayicon.cpp,I34fded516300cc9aab1eb67644dcef8631ecfdf1,322748,1,if QGuiApplication platformName offscreen ,"    if (QGuiApplication::platformName() == ""offscreen"")","    if (QGuiApplication::platformName() == u""offscreen"")\n    if (QGuiApplication::platformName() == u""offscreen"")\n",112,refs/changes/48/322748/1
1,1,src/gui/kernel/qplatformintegration.h,I849943b03655f6c6d9690c9a223fcf6858120729,325879,1,SplitterMouseExtraMargin,        SplitterMouseExtraMargin,        MinimumMouseAreaSize\n        MinimumMouseAreaSize\n,199,refs/changes/79/325879/1
1,1,src/corelib/text/qstringconverter.cpp,I31f03518fd9c70507cbd210a8bcf405b6a0106b1,298943,6,int pos matcher indexIn header ,    int pos = matcher.indexIn(header);,"    int pos = header.indexOf(""meta "");\n    int pos = header.indexOf(""meta "");\n",1542,refs/changes/43/298943/6
1,1,src/corelib/io/qfilesystemiterator_win.cpp,Ibfa5e7035515773461f6cdbff35299315ef65737,305804,1, include qlist h ,"#include ""qlist.h""",\nQList<QString> list1(3);\n,42,refs/changes/04/305804/1
1,1,tests/auto/corelib/time/qdatetime/tst_qdatetime.cpp,I0eed35df871c69a20bcd7c544fc0e9a48dd8db7b,331989,1,if constexpr sizeof qsizetype sizeof int ,    if constexpr (sizeof(qsizetype) == sizeof(int)),"        QEXPECT_FAIL("""", ""fails on 32-bit systems (QTBUG-89889)"", Continue);\n    if constexpr (sizeof(qsizetype) == 4)\n        QEXPECT_FAIL("""", ""fails on 32-bit systems (QTBUG-89889)"", Continue);",3830,refs/changes/89/331989/1
1,1,src/concurrent/qtconcurrentrun.cpp,Ic8233aeffbdbd1420bdbde7ad7d03f25cd438ea8,310873,3,These functions are a part of the Qt Concurrent framework ,    These functions are a part of the Qt Concurrent framework.,    These functions are part of the Qt Concurrent framework.\n    These functions are part of the Qt Concurrent framework.\n,55,refs/changes/73/310873/3
1,1,src/corelib/serialization/qjsonobject.h,I78b40aba8200003acfae257ff06f5f15737005e7,267837,1, if QT STRINGVIEW LEVEL <NUMBER>,#if QT_STRINGVIEW_LEVEL < 2,\n    bool m_isDead = false;\n,103,refs/changes/37/267837/1
1,1,tests/auto/corelib/kernel/qdeadlinetimer/tst_qdeadlinetimer.cpp,Ib691f5f23a92fb8b41a24f7b603981d9c9450ddc,314417,2,QTRY VERIFY WITH TIMEOUT timersExecuted <NUMBER> minResolution ,"    QTRY_VERIFY_WITH_TIMEOUT(timersExecuted, 4 * minResolution);","        QSKIP(""Looks like timers didn't fire on time."");\n    if (!QTest::qWaitFor([&timersExecuted]() { return timersExecuted; }, 4 * minResolution))\n        QSKIP(""Looks like timers didn't fire on time."");",596,refs/changes/17/314417/2
1,1,src/corelib/io/qwindowspipereader_p.h,I38ed4861a238e39e793c3716e856e5bfdeed3d74,330320,1,enum State Stopped Running Aborted ,"    enum State { Stopped, Running, Aborted };","    enum State { Stopped, Running, Draining } state;\n    enum State { Stopped, Running, Draining } state;\n",116,refs/changes/20/330320/1
1,1,src/network/ssl/qtlsbackend.cpp,I8409d81fd11fb46e6ab4465b4937a7680a8c2447,331335,2,class BackEndFactoryCollection,class BackEndFactoryCollection,class BackendCollection\nclass BackendCollection\n,58,refs/changes/35/331335/2
1,1,src/gui/rhi/qrhigles2.cpp,Iaf80d0966f45cbb09e7c1000b7854bc488e57bb3,302353,1,qPrintable QString fromUtf<NUMBER> var name ,                     qPrintable(QString::fromUtf8(var.name)));,                     var.name.constData());\n                     var.name.constData());\n,3381,refs/changes/53/302353/1
1,1,src/network/access/decompresshelper.cpp,Iecf3e359734163f15686c949f75d41fa4794a00e,296785,7,return true ,    return true;,"\n            qint64 bytesRead = countHelper->read(temp.data(), temp.size());\n",201,refs/changes/85/296785/7
1,1,tests/auto/corelib/kernel/qvariant/tst_qvariant.cpp,I363621033f7fc600edcea2acb786820ccba49c86,311545,5,QMetaType registerMutableView MyType MyTypeView MyType data ,"    QMetaType::registerMutableView<MyType, MyTypeView>([&](MyType &data) {","    const bool success = QMetaType::registerMutableView<MyType, MyTypeView>([&](MyType &data) {\n    const bool success = QMetaType::registerMutableView<MyType, MyTypeView>([&](MyType &data) {\n",4746,refs/changes/45/311545/5
1,1,src/corelib/io/qprocess_p.h,Ib295bcc91e358926893e9756e3b89346560329f4,324021,1,bool performDying bool readyReadEmitted nullptr ,    bool performDying(bool *readyReadEmitted = nullptr);,\n    const auto charFormat = doc->begin().begin().fragment().charFormat();\n,323,refs/changes/21/324021/1
1,1,src/corelib/io/qwindowspipereader.cpp,I66443c3021d6ba98639a214c3e768be97d2cf14b,331232,3, internal,    \internal,"\n    // Note that signals are not emitted in the call below, as the caller\n",148,refs/changes/32/331232/3
1,1,src/widgets/kernel/qdesktopwidget.cpp,Ifc89be65a0dce265b6729feaf54121c35137cb94,300707,7,QHash QScreen QDesktopScreenWidget newScreenWidgets ,"    QHash<QScreen*, QDesktopScreenWidget*> newScreenWidgets;","    QFlatMap<QScreen*, QDesktopScreenWidget*> newScreenWidgets;\n    QFlatMap<QScreen*, QDesktopScreenWidget*> newScreenWidgets;\n",84,refs/changes/07/300707/7
1,1,src/corelib/kernel/qmetaobject.cpp,Id7359ffc14897237ea9672dabae9ef199a821907,268941,2,int nargs <NUMBER> include return type,        int nargs = 1; // include return type,        int argIndex = 0;\n        int argIndex = 0;\n,2311,refs/changes/41/268941/2
1,1,src/corelib/text/qstringview.h,I6df3a9507276f5d16d044a6bdbe0e4810cf99440,300457,1,Q CORE EXPORT double toDouble bool ok nullptr const ,    Q_CORE_EXPORT double toDouble(bool *ok = nullptr) const;,    Q_REQUIRED_RESULT Q_CORE_EXPORT float toFloat(bool *ok = nullptr) const;\n    Q_REQUIRED_RESULT Q_CORE_EXPORT double toDouble(bool *ok = nullptr) const;\n,335,refs/changes/57/300457/1
1,1,src/plugins/platforms/qnx/qqnxsimpleclipboard.cpp,I30e30a4d964697a44691363a181cdcef778da51b,313733,1,QFile file m clipboardDir filePath fileName ,    QFile file(m_clipboardDir.filePath(fileName));,    if (!file.open(QIODevice::ReadOnly))\n    QSaveFile file(m_clipboardDir.filePath(fileName));\n    if (!file.open(QIODevice::ReadOnly)),282,refs/changes/33/313733/1
1,1,src/concurrent/qtconcurrentrun.cpp,Ic8233aeffbdbd1420bdbde7ad7d03f25cd438ea8,310873,3,The a function is expected to declare void as its return value,    The \a function is expected to declare void as its return value,"    and must take an additional argument of \e {QPromise<T> &} type,\n    The \a function is expected to return void\n    and must take an additional argument of \e {QPromise<T> &} type,",281,refs/changes/73/310873/3
1,1,src/network/ssl/qsslsocket_mac.cpp,I05877de9c02857594e76b24d52e7578bdb01df69,330049,4,return false ,        return false;,"\n        qCWarning(lcSsl) << ""Cannot provide the list of supported protocols for the backend"" << backendName;\n",1577,refs/changes/49/330049/4
1,1,tests/auto/widgets/widgets/qdatetimeedit/tst_qdatetimeedit.cpp,I05eaaf57d87a9111d3609ebab81bc707f8af98f0,298180,1, endif,#endif,\n                Start or finish a scrolling sequence by grabbing/releasing the wheel via\n,4545,refs/changes/80/298180/1
1,1,src/corelib/text/qlocale_p.h,Iea47e0f8fc8b40378df7fffd1624c20707a6ca39,308614,1,qsizetype processed <NUMBER> negative value means error,    qsizetype processed = -1;    // negative value means error,    qsizetype processed = -1;\n\n    // positive for success (0 means nothing parsed; -1 means we did try to,72,refs/changes/14/308614/1
1,1,src/corelib/time/qdatetimeparser_p.h,Ia6ba08df198288b8b11d3b2d2052c194f04fe8a1,316622,2,bool operator const ParsedSection o const,        bool operator==(const ParsedSection &o) const,\n        QPropertyObserver **nodeState;\n,214,refs/changes/22/316622/2
1,1,src/corelib/tools/qhash.cpp,I614d7b3082e91c9d16e0441649d6a153b222bd2e,316032,1, endif,#  endif,"\n        QCOMPARE(result, std::vector<int>({ 2, 4, 6 }));\n",395,refs/changes/32/316032/1
1,1,src/corelib/kernel/qproperty.h,I43803a0dfe210353d0235f0373d2257f75ffe534,331153,2,return QUntypedPropertyBinding ,            return QUntypedPropertyBinding {};,\n            return QUntypedPropertyBinding {};\n,605,refs/changes/53/331153/2
1,1,src/corelib/text/qanystringview.h,Ia7179760fca0e0b67d52f5accb0a62e389b17913,301594,1, Q ANY SV MAKE RELOP ,//Q_ANY_SV_MAKE_RELOP(<=>),#ifdef __cpp_impl_three_way_comparison\nQ_ANY_SV_MAKE_RELOP(<=>)\n#else,228,refs/changes/94/301594/1
1,1,src/corelib/tools/qhashfunctions.h,Id7a1b97b3c0d219e65de2e6e1fe6faf092f8ce16,289821,3,if sizeof size t <NUMBER> ,    if (sizeof(size_t) == 4) {,    if constexpr (sizeof(size_t) == 4) {\n    if constexpr (sizeof(size_t) == 4) {\n,76,refs/changes/21/289821/3
1,1,src/corelib/serialization/qjsonobject.cpp,Ic3035552c6174167b4fe19fd4c825500dff16ded,267432,1,if needsToCompact ,    if (needsToCompact()),    compactIfNeeded();\n    compactIfNeeded();\n,528,refs/changes/32/267432/1
1,1,src/corelib/text/qchar.cpp,I6175f6ab9bcf1956f6f97ab0c9d9d5aaf777296d,320486,2,QString str ,    QString str;,    QString str = getString();\n    QString str = getString();\n,2137,refs/changes/86/320486/2
1,1,src/corelib/global/qglobal.h,I3bb957b50973b5b17353b5f470f9781974d602b1,313503,4, define QT DEPRECATED CODE ,#  define QT_DEPRECATED_CODE(...),#  define QT_DEPRECATED_CODE(...) __VA_ARGS__\n#  define QT_DEPRECATED_CODE(...) __VA_ARGS__\n,274,refs/changes/03/313503/4
1,1,src/dbus/doc/snippets/code/doc_src_qdbusadaptors.cpp,Idfe86ae0f38e43678cc5e746e30e5eeaf8eb72dc,302240,5, Q NOREPLY void myMethod ,//Q_NOREPLY void myMethod();,Q_NOREPLY void myMethod();\nQ_NOREPLY void myMethod();\n,93,refs/changes/40/302240/5
1,1,src/corelib/kernel/qcore_mac_p.h,Ibb0a9c0bcfefbda4347737212e40e300a3184982,300230,3,NSObject object nil ,    NSObject *object = nil;,    NSObject *object = nullptr;\n    NSObject *object = nullptr;\n,418,refs/changes/30/300230/3
1,1,src/plugins/platforms/xcb/qxcbconnection_xi2.cpp,Ie6a3d8dd494f981e8706b9a66a1021dfb51baec4,323794,6,QInputDevice Capability Scroll <NUMBER> ,"                                                              QInputDevice::Capability::Scroll, 3);",                                                              QInputDevice::Capability::Scroll);\n                                                              QInputDevice::Capability::Scroll);\n,261,refs/changes/94/323794/6
1,1,src/corelib/text/qbytearray.cpp,I787af7fcfa17e1be87decb64c41c609cc24be117,307340,5,const qsizetype len int strlen str ,        const qsizetype len = int(strlen(str));,        const qsizetype len = qsizetype(strlen(str));\n        const qsizetype len = qsizetype(strlen(str));\n,1120,refs/changes/40/307340/5
1,1,src/gui/image/qiconloader_p.h,Ic08a899321eaffc46b8461aaee3dbaa4d2c727a9,305159,2, include QtCore QList ,#    include <QtCore/QList>,#include <QtCore/QTypeInfo>\n#include <QtCore/QList>\n#include <QtCore/QTypeInfo>,63,refs/changes/59/305159/2
1,1,src/corelib/time/qcalendar.cpp,I28a473896539b79bbd4b6729b3a417631f9ac8c6,270316,2,return calendarRegistry byName keys ,    return calendarRegistry->byName.keys();,    return result;\n    QStringList result;\n    for (const auto &pair : calendarRegistry->byName),509,refs/changes/16/270316/2
1,1,src/gui/text/qtextformat.cpp,I0796f18224aac8df6baf8359c35022fd98fe64ef,299748,1, since <NUMBER> <NUMBER> <NUMBER>,    \since 5.15.1,    \since 6.0\n    \since 6.0\n,1784,refs/changes/48/299748/1
1,1,src/platformsupport/fontdatabases/freetype/qfontengine_ft.cpp,I903085ddeac59224715dca6e8a1ff26c44f5b0b0,277795,1,while i <NUMBER> ,    while(i > 0) {,    while (i > 0) {\n    while (i > 0) {\n,1396,refs/changes/95/277795/1
1,1,util/unicode/main.cpp,I05ff2a6337b7ed14e0a2dc9c03fc784c92b63515,309135,3,if qAbs diff <NUMBER> <NUMBER> Does happen,            if (qAbs(diff) >= (1 << 13)) { // Does happen,            if (qAbs(diff) >= (1<<13)) {\n            if (qAbs(diff) >= (1<<13)) {\n,1234,refs/changes/35/309135/3
1,1,src/corelib/kernel/qproperty.cpp,I43803a0dfe210353d0235f0373d2257f75ffe534,331153,2, obsolete,  \obsolete,\n  Returns a default constructed QUntypedPropertyBinding if no binding is set.\n,1389,refs/changes/53/331153/2
1,1,src/corelib/kernel/qvariant.h,I46617cc4d5c1e8c162d0f1f7ae32e4cfe9ce915c,256661,1, if possible we reuse the current QVariant private,    //if possible we reuse the current QVariant private,    // If possible we reuse the current QVariant private.\n    // If possible we reuse the current QVariant private.\n,551,refs/changes/61/256661/1
1,1,src/corelib/time/qdatetime.cpp,I81afda9063fa232d06841d63f69e19b49f8083f3,314629,2, note Day and month names are given in English ,    \note Day and month names are given in English.,"    If localized month and day names are desired, use\n    \note Day and month names are given in English (C locale).\n    If localized month and day names are desired, use",1130,refs/changes/29/314629/2
1,1,src/corelib/text/qregularexpression.cpp,Icb5efd5c6ef27f2e31a9780bf62f5671ddc603cd,311621,2,QList int capturedOffsets ,    QList<int> capturedOffsets; //,    QList<qsizetype> capturedOffsets;\n    QList<qsizetype> capturedOffsets;\n,790,refs/changes/21/311621/2
1,1,src/tools/moc/main.cpp,I49e5d62b2b29e302ebbd455ac1e7c7c8ade599eb,304548,1,if ciso<NUMBER>file exists ,        if(ciso646file.exists()) {,"        else\n            moc.abiNamespace = """";\n",572,refs/changes/48/304548/1
1,1,util/unicode/main.cpp,I05ff2a6337b7ed14e0a2dc9c03fc784c92b63515,309135,3,if qAbs diff <NUMBER> <NUMBER> Does happen,            if (qAbs(diff) >= (1 << 13)) { // Does happen,            if (qAbs(diff) >= (1<<13)) {\n            if (qAbs(diff) >= (1<<13)) {\n,1852,refs/changes/35/309135/3
