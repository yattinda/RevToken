label,status,file_dir,change_id,change_num,patch_set,shaped_code,before_code,after_code,line,ref
1,1,src/corelib/thread/qfutureinterface.h,I77494f2cb73ce727ffad721cfcdcaa420899eb25,316794,3,if insertIndex <NUMBER> store filterMode oldResultCount store count ,    if (insertIndex != -1 && (!store.filterMode() || oldResultCount < store.count())) {,    if (insertIndex != -1 && (!store.filterMode() || oldResultCount < store.count()))\n    if (insertIndex != -1 && (!store.filterMode() || oldResultCount < store.count()))\n,291,refs/changes/94/316794/3
1,1,src/gui/kernel/qguiaction.cpp,Ic490a5e3470939ee8af612d46ff41d4c8c91fbdf,265909,2, property QAction iconText,    \property QAction::iconText,    \property QGuiAction::iconText\n    \property QGuiAction::iconText\n,635,refs/changes/09/265909/2
1,1,src/corelib/itemmodels/qabstractitemmodel.h,I2f6293ecf1b3150b9f407a7349579c17e650c340,303307,2,MatchFixedString ,"        MatchFixedString,","        MatchRegularExpression = 4,\n        MatchWildcard = 5,\n#endif",72,refs/changes/07/303307/2
1,1,src/corelib/io/qwindowspipereader.cpp,I66443c3021d6ba98639a214c3e768be97d2cf14b,331232,3, internal,    \internal,"\n    // Note that signals are not emitted in the call below, as the caller\n",148,refs/changes/32/331232/3
1,1,src/corelib/kernel/qwineventnotifier.cpp,I2fb1ba7254ecfd502a22c706404f92dd1bc3a584,340602,1, Wait for outstanding callback to complete ,    // Wait for outstanding callback to complete.,\nstatic const int bufferSize = 2048; // 2 paths (mount point+device) and metainfo;\n,283,refs/changes/02/340602/1
1,1,src/network/ssl/qsslsocket_openssl_symbols.cpp,Ibd8810c0070db7e6b3ead6d6a569facdab88b646,303108,1,QDuplicateTracker QString paths QSet QString data ,    QDuplicateTracker<QString> *paths = (QSet<QString> *)data;,    QDuplicateTracker<QString> *paths = (QDuplicateTracker<QString> *)data;\n    QDuplicateTracker<QString> *paths = (QDuplicateTracker<QString> *)data;\n,573,refs/changes/08/303108/1
1,1,src/tools/moc/moc.cpp,I3519fe20233d473f34a24ec9589d045cdd162a12,286855,1,const int VersionComponentBits <NUMBER> ,    const int VersionComponentBits = 12;,    const int VersionComponentBits = 8;\n    const int VersionComponentBits = 8;\n,383,refs/changes/55/286855/1
1,1,src/corelib/io/qresource.cpp,I0ff4ed146fe53922691d5473d0c236f31d478a04,318137,1,ok data len file read char data data len ,"                ok = (data_len == file.read((char *)data, data_len));","                ok = (data_len == file.read(reinterpret_cast<char *>(data), data_len));\n                ok = (data_len == file.read(reinterpret_cast<char *>(data), data_len));\n",1202,refs/changes/37/318137/1
1,1,tests/auto/concurrent/qtconcurrentfiltermapgenerated/generation_helpers.h,I61ed1758601e219c5852e8cc939c5feebb23d2f6,316819,16,bool operator const T el return el value <NUMBER> ,    bool operator()(const T &el) { return (el.value & 1); },    bool operator()(const T &el) { return el.isOdd(); }\n    bool operator()(const T &el) { return el.isOdd(); }\n,123,refs/changes/19/316819/16
1,1,src/gui/kernel/qhighdpiscaling.cpp,I58e4e3eebb8cdd5171e59f97833a00e7f8d9ecd6,302304,4, for the search a guess my be nullptr Returns nullptr if a position is outside,// for the search. \a guess my be nullptr. Returns nullptr if \a position is outside,// for the search. \a guess might be nullptr. Returns nullptr if \a position is outside\n// for the search. \a guess might be nullptr. Returns nullptr if \a position is outside\n,694,refs/changes/04/302304/4
1,1,src/corelib/kernel/qcoreevent.h,I3106dd6ecb2367fef6f8012c28266e1b4b1abf4b,321017,3,quint<NUMBER> reserved <NUMBER> ,    quint32 reserved : 10;,    quint16 m_singlePointEvent : 1;\n    quint16 reserved : 10;\n,332,refs/changes/17/321017/3
1,1,src/gui/accessible/qaccessiblecache.cpp,I72b2d5a93f6b397fd3666d45951109e3e5aff754,300336,4,QVector QPair QAccessible Id const QMetaObject values objectToId values obj ,"    QVector<QPair<QAccessible::Id, const QMetaObject*>> values = objectToId.values(obj);",    if (const QMetaObject *mo = obj->metaObject()) {\n        for (auto pair : objectToId.values(obj)) {\n,130,refs/changes/36/300336/4
1,1,src/gui/math3d/qmatrix4x4.h,Ia64d934d3dda3e718357cf4e3c32866a613a4722,302189,1,int flags const return flagBits ,    int flags() const { return flagBits; },"\n//                this, SLOT(callFinishedSlot(QDBusPendingCallWatcher*)));\n",189,refs/changes/89/302189/1
1,1,src/corelib/kernel/qmetatype.h,Iffad20085cf33f33447f58a68236013a8b60fdbf,284225,3,const decltype typenameHelper T QMetaTypeForType T name typenameHelper T ,const decltype(typenameHelper<T>()) QMetaTypeForType<T>::name = typenameHelper<T>();,constexpr const decltype(typenameHelper<T>()) QMetaTypeForType<T>::name = typenameHelper<T>();\nconstexpr const decltype(typenameHelper<T>()) QMetaTypeForType<T>::name = typenameHelper<T>();\n,2332,refs/changes/25/284225/3
1,1,src/corelib/thread/qfuture_impl.h,Ic9fa978380e2c24e190e68d974051a650b0e5571,297139,7,if constexpr std is invocable v std decay t Function QFuture void ,"                if constexpr (std::is_invocable_v<std::decay_t<Function>, QFuture<void>>)","                fulfillPromiseWithResult();\n                fulfillPromiseWithVoidResult();\n            } else if constexpr (std::is_invocable_v<Function, ParentResultType>) {",296,refs/changes/39/297139/7
1,1,src/corelib/kernel/qmetatype.h,I286fe173b43a495dbda8faa151a93895b4fd22e4,334549,1,const int aId ai ai a idHelper ,        const int aId = ai ? ai : a.idHelper();,        const int aId = a.id();\n        const int bId = b.id();\n,498,refs/changes/49/334549/1
1,1,src/corelib/kernel/qcoreapplication.cpp,Ia2aa807ffa8a4c798425fffd15d97ddb4f35b0ae,282359,3, more information Qt will continue as UTF <NUMBER> s ,"                 ""more information. Qt will continue as UTF-8 (\""%s\"")."",","                 ""Qt shall use a UTF-8 locale (\""%s\"") instead. If this causes problems,\n""\n                 ""reconfigure your locale. See the locale(1) manual for more information."",\n",643,refs/changes/59/282359/3
1,1,src/gui/kernel/qwindow.cpp,I201f5ee9c6a73b949986648e3bd288d2c7898f28,298812,1,The function is called when the window is requested to close Ignore the,    The function is called when the window is requested to close. Ignore the,    on the event if you want to prevent the window from being closed.\n    The function is called when the window is requested to close. Call \l{QEvent::ignore()}\n    on the event if you want to prevent the window from being closed.,2325,refs/changes/12/298812/1
1,1,src/gui/kernel/qpalette.cpp,Ibfa925f3e4cb0be89915607eee142926e05000b5,282369,1,QStringLiteral <NUMBER> <NUMBER> arg ,"                QStringLiteral(""%1:[%2]"").arg(","            roleString += QString::fromUtf8(roleEnum.valueToKey(cr)) + QStringLiteral("":["") +\n                          groupString + QStringLiteral(""],"");\n",1253,refs/changes/69/282369/1
1,1,src/corelib/text/qbytearray.h,Iabf22e8d4f3fef3c5e69a17f103e6cddebe420b1,302912,1, Q ASSERT pos <NUMBER> n <NUMBER> pos n size return QByteArray data pos int n ,"    { Q_ASSERT(pos >= 0 && n >= 0 && pos + n <= size()); return QByteArray(data() + pos, int(n)); }","    Q_REQUIRED_RESULT QByteArray slice(qsizetype pos, qsizetype n) const\n    { Q_ASSERT(pos >= 0); Q_ASSERT(n >= 0); Q_ASSERT(size_t(pos) + size_t(n) <= size_t(size())); return QByteArray(data() + pos, int(n)); }\n",235,refs/changes/12/302912/1
1,1,src/corelib/kernel/qproperty.cpp,I56c0bce15af8121159630b5c0922c287c15b7618,331538,1,The change handler will be called whenever the value held by the,  The change handler will be called whenever the value held by the,  \snippet code/src_corelib_kernel_qproperty.cpp 4\n  The dirty handler will be called whenever the property transitions from\n  non-dirty state to dirty state. It is marked as dirty,1037,refs/changes/38/331538/1
1,1,src/corelib/tools/qscopedvaluerollback.h,I4c5e6f5d35cd74c464667f633344d27c0656f0eb,315148,2, varRef var oldValue std exchange var std move value ,"        : varRef(var), oldValue(std::exchange(var, std::move(value)))","        : varRef(var), oldValue(qExchange(var, std::move(value)))\n        : varRef(var), oldValue(qExchange(var, std::move(value)))\n",61,refs/changes/48/315148/2
1,1,src/gui/text/qtextengine.cpp,Ief1a97c52544b271556811816f7804074bd336df,300004,1,layoutData string QLatin<NUMBER>Char char <NUMBER>xA<NUMBER> ,            layoutData->string += QLatin1Char(char(0xA7));,            layoutData->string += QLatin1Char('\xA7');\n            layoutData->string += QLatin1Char('\xA7');\n,1890,refs/changes/04/300004/1
1,1,src/dbus/doc/snippets/code/src_qdbus_qdbusabstractinterface.cpp,Idfe86ae0f38e43678cc5e746e30e5eeaf8eb72dc,302240,5,QDBusInterface interface ,    QDBusInterface *interface;,class Abstract_DBus_Interface : public QObject\n{\n    Q_OBJECT,63,refs/changes/40/302240/5
1,1,src/corelib/time/qdatetime.cpp,I6a4390df90945af74a5eac2f0a752febd925ad62,293624,3,if words at <NUMBER> endsWith u ,"        if (words.at(0).endsWith(u"","")) {","        if (words.at(0).endsWith(u',')) {\n        if (words.at(0).endsWith(u',')) {\n",179,refs/changes/24/293624/3
1,1,src/plugins/platforms/qnx/qqnxsimpleclipboard.h,I30e30a4d964697a44691363a181cdcef778da51b,313733,1,QVariant retrieveData const QString mimetype QVariant Type preferredType const ,"    QVariant retrieveData(const QString &mimetype, QVariant::Type preferredType) const;","    QVariant retrieveData(const QString &mimetype, QVariant::Type preferredType) const override;\n    QVariant retrieveData(const QString &mimetype, QVariant::Type preferredType) const override;\n",71,refs/changes/33/313733/1
1,1,src/corelib/tools/qstring.cpp,I1c624f00e4ed10111e0d00b86daff7904eeed176,257923,3,Returns the index position of the first occurrence of the string view a,    Returns the index position of the first occurrence of the string view \a,    Returns the index position of the first occurrence of the string  view\a\n    Returns the index position of the first occurrence of the string  view\a\n,3726,refs/changes/23/257923/3
1,1,tests/benchmarks/corelib/text/qregularexpression/main.cpp,Idef775ef6cf9f9ded3ce7ba5b85e460571d12756,325260,1,QTest newRow non empty article w noun w ,"    QTest::newRow(""non-empty"") << ""(?<article>\\w+) (?<noun>\\w+)""","    QTest::newRow(""non-empty"") << nonEmptyPattern << nonEmptyPatternOptions;\n    QTest::newRow(""non-empty"") << nonEmptyPattern << nonEmptyPatternOptions;\n",64,refs/changes/60/325260/1
1,1,tests/manual/qopenglwidget/openglwidget/main.cpp,Ie0455c890c048c52eacad1badd6d21df999badf9,306957,1,Tools t wnd glw<NUMBER> QList QWidget glw glw<NUMBER> glw<NUMBER> glw<NUMBER> ,"    Tools t(&wnd, glw3, QList<QWidget *>() << glw << glw2 << glw3 << glw4);","    Tools t(&wnd, glw3, QWidgetList { glw, glw2, glw3, glw4 });\n    Tools t(&wnd, glw3, QWidgetList { glw, glw2, glw3, glw4 });\n",215,refs/changes/57/306957/1
1,1,src/tools/androiddeployqt/main.cpp,I1fac51ed9e88ef42c761bc916ba1c3bf439806e8,309567,1, To canceal the keystore information the keystore and alias n ,"                    ""       ** To canceal the keystore information, the keystore and alias\n""","                    ""         passwords respectively. This option needs only the --sign parameter.\n""\n                    ""       NOTE: To conceal the keystore information, the environment variables\n""\n                    ""         QT_ANDROID_KEYSTORE_PATH, and QT_ANDROID_KEYSTORE_ALIAS are used to\n""",636,refs/changes/67/309567/1
1,1,src/widgets/itemviews/qlistwidget.cpp,I5fa24dfdd8945be99a1ef58bb4a7ea258ba214a5,312266,1,int QListWidget findData const QString text Qt MatchFlags flags const,"int QListWidget::findData(const QString& text, Qt::MatchFlags flags) const","int QListWidget::findData(const QString &text, Qt::MatchFlags flags) const\nint QListWidget::findData(const QString &text, Qt::MatchFlags flags) const\n",1792,refs/changes/66/312266/1
1,1,src/network/access/decompresshelper.cpp,Iecf3e359734163f15686c949f75d41fa4794a00e,296785,7,uncompressedBytes countHelper read temp data temp size ,"            uncompressedBytes += countHelper->read(temp.data(), temp.size());","            uncompressedBytes += bytesRead;\n            qint64 bytesRead = countHelper->read(temp.data(), temp.size());\n            if (bytesRead == -1) {",198,refs/changes/85/296785/7
1,1,src/corelib/text/qbytearray.cpp,I2925d9908f8654599195a2860847b17083911b41,302364,2, this QLocaleData c doubleToString n prec form <NUMBER> flags toLatin<NUMBER> TODO UTF <NUMBER> ,"    *this = QLocaleData::c()->doubleToString(n, prec, form, -1, flags).toLatin1(); // TODO UTF-8 ?","    *this = QLocaleData::c()->doubleToString(n, prec, form, -1, flags).toUtf8();\n    *this = QLocaleData::c()->doubleToString(n, prec, form, -1, flags).toUtf8();\n",4185,refs/changes/64/302364/2
1,1,src/gui/painting/qprintrangecollection.cpp,I0be5a8a64781c411f83b96a24f216605a84958e5,258431,2,std sort intervals begin intervals end const QPair int int a const QPair int int b ,"    std::sort(intervals.begin(), intervals.end(), [](const QPair<int, int> &a, const QPair<int, int> &b) {","    std::sort(intervals.begin(), intervals.end());\n    std::sort(intervals.begin(), intervals.end());\n",53,refs/changes/31/258431/2
1,1,src/corelib/kernel/qobject.cpp,I900f6980a2cd8a5f72c3ad18697b5dd49100217d,249600,3,if signal index <NUMBER> connections ,    if (signal_index < 0 || !connections),    if (signal_index < 0 || !cd)\n    ConnectionData *cd = connections.load();\n    if (signal_index < 0 || !cd),265,refs/changes/00/249600/3
1,1,src/gui/kernel/qevent.cpp,I740e4e40165b7bc41223d38b200bbc2b403e07b6,301583,24,for const QEventPoint point m touchPoints ,    for (const QEventPoint &point : m_touchPoints),        QMutableEventPoint::from(point).setParent(this);\n    for (QEventPoint &point : m_touchPoints)\n        QMutableEventPoint::from(point).setParent(this);,4191,refs/changes/83/301583/24
1,1,src/corelib/io/qresource.cpp,Ia255052ea33e7d7fccb0627accd20315bbe5d393,303511,1,qPrintable path ,                 qPrintable(path));,"        qWarning(""QResource::addResourceSearchPath: Search paths must be absolute (start with /) [%ls]"",\n                 qUtf16Printable(path));\n",818,refs/changes/11/303511/1
1,1,src/plugins/platforms/windows/qwindowsscreen.cpp,I90b0b7563efc35c9bace07ccb3996350a957e8e5,266861,6,if result ERROR SUCCESS ,    if (result == ERROR_SUCCESS) {,"\n    return QtPrivate::QStringList_join_qst(self(), sep.data(), sep.size());\n",102,refs/changes/61/266861/6
1,1,tests/auto/corelib/time/qdatetime/tst_qdatetime.cpp,I0330b647fa011be99141dde09001ff2d58bd3a5f,313316,2,const QByteArray pY QString number positiveYearNumber toLatin<NUMBER> ,        const QByteArray pY = QString::number(positiveYearNumber).toLatin1();,        const QByteArray nY = QByteArray::number(negativeYearNumber);\n        const QByteArray pY = QByteArray::number(positiveYearNumber);\n        const QByteArray nY = QByteArray::number(negativeYearNumber);,2020,refs/changes/16/313316/2
1,1,src/corelib/global/qrandom.h,I3eb349b832c14610895efffd16356927fe78fd02,314217,1, algorithm could potentially run forever but the worst case cenario only,"    // algorithm could potentially run forever, but the worst case cenario only","    // will never need, then check if it's higher than ""highest"". The number of\n    // times the loop will run is unbounded but the probability of terminating\n    // is better than 1/2 on each iteration. Therefore, the average loop count",276,refs/changes/17/314217/1
1,1,examples/widgets/tools/codecs/encodingdialog.cpp,I9141320225037e1bc6b7f920bf01a9d0144fdac2,268730,2,QT TRANSLATE NOOP EncodingDialog wchar t on Windows char<NUMBER> t ,"    QT_TRANSLATE_NOOP(""EncodingDialog"", ""wchar_t on Windows, char16_t""),","    QT_TRANSLATE_NOOP(""EncodingDialog"", ""wchar_t on Windows, char16_t everywhere""),\n    QT_TRANSLATE_NOOP(""EncodingDialog"", ""wchar_t on Windows, char16_t everywhere""),\n",251,refs/changes/30/268730/2
1,1,src/plugins/platforms/windows/qwindowswindow.cpp,Id26b5070fe18ea8c85e91ec3b088baa585319e9b,321069,5,if QOperatingSystemVersion current QOperatingSystemVersion Windows<NUMBER> ,    if (QOperatingSystemVersion::current() < QOperatingSystemVersion::Windows10) {,    if (QOperatingSystemVersion::current() < QOperatingSystemVersion::Windows10)\n    if (QOperatingSystemVersion::current() < QOperatingSystemVersion::Windows10)\n,1847,refs/changes/69/321069/5
1,1,src/gui/kernel/qevent.cpp,Id96e837c5f7487f367a07f73e807eac5aae65bf1,264021,1,Returns the mouse cursor s position relative to the receiving scene or window ,    Returns the mouse cursor's position relative to the receiving scene or window.,    Returns the mouse cursor's position relative to the receiving window.\n    Returns the mouse cursor's position relative to the receiving window.\n,151,refs/changes/21/264021/1
1,1,src/corelib/io/qwindowspipereader.cpp,I66443c3021d6ba98639a214c3e768be97d2cf14b,331232,3, internal,    \internal,"\n    // Note that signals are not emitted in the call below, as the caller\n",148,refs/changes/32/331232/3
1,1,src/corelib/io/qprocess_unix.cpp,Ia8b65350cd5d49debca9fffd15f801161363aea7,292539,1, this is a virtual call and it base behavior is to do nothing ,"    // this is a virtual call, and it base behavior is to do nothing.","    // this is a virtual call, and its base behavior is to do nothing.\n    // this is a virtual call, and its base behavior is to do nothing.\n",380,refs/changes/39/292539/1
1,1,src/corelib/kernel/qproperty.h,I9bb49e457165ddc1e4c8bbdf3d3c9fbf5ff27e94,316302,7,quintptr nodeState ,        quintptr nodeState;,        QPropertyObserver **nodeState;\n        QPropertyObserver **nodeState;\n,261,refs/changes/02/316302/7
1,1,src/corelib/tools/qstring.cpp,Ia7e2cb2926dc30b4dba33200b17697fd33d22446,263709,1,const auto totalSize resolveStringRefsAndReturnTotalSize parts argIndexToPlaceholderMap args ,"    const auto totalSize = resolveStringRefsAndReturnTotalSize(parts, argIndexToPlaceholderMap, args);","    const int totalSize = resolveStringRefsAndReturnTotalSize(parts, argIndexToPlaceholderMap, args);\n    const int totalSize = resolveStringRefsAndReturnTotalSize(parts, argIndexToPlaceholderMap, args);\n",8945,refs/changes/09/263709/1
1,1,src/3rdparty/forkfd/forkfd_c11.h,Iec9c051acd73484c8d94fffd15b9985fe545e8b5,270164,1,using std atomic int ,using std::atomic_int;,typedef std::atomic_int ffd_atomic_int;\ntypedef std::atomic_int ffd_atomic_int;\n,39,refs/changes/64/270164/1
1,1,src/gui/math3d/qvectornd.cpp,I601a830959d13a73dcb17ce31a1202a1486c8f7f,324688,2,either zero or NaN and returns a reference to this vector ,"    either zero or NaN, and returns a reference to this vector.","    Divides this vector's coordinates by the given \a divisor, and returns a\n    reference to this vector. The \a divisor must not be either zero or NaN.\n",285,refs/changes/88/324688/2
1,1,src/corelib/kernel/qvariant.cpp,I65aac3ec4d50d62424ee33f44b99f3cfb91121d6,267954,1, if defined QT BOOTSTRAPPED QT CONFIG easingcurve ,#if !defined(QT_BOOTSTRAPPED) && QT_CONFIG(easingcurve),#if QT_CONFIG(easingcurve)\n#if QT_CONFIG(easingcurve)\n,2795,refs/changes/54/267954/1
1,1,src/corelib/time/qdatetime.cpp,I81afda9063fa232d06841d63f69e19b49f8083f3,314629,2, note Day and month names are given in English ,    \note Day and month names are given in English.,"    QLocale::system().toDateTime().\n    \note Day and month names as well as AM/PM indication are given in English (C locale).\n    If localized month and day names and localized forms of AM/PM are used, use",1130,refs/changes/29/314629/2
1,1,src/gui/kernel/qevent.h,I8e6f587da76d6d0bca6e965ce8ebc7e67b868011,292117,1,QT DEPRECATED VERSION X <NUMBER> <NUMBER> Use scenePosition ,"        QT_DEPRECATED_VERSION_X_5_15(""Use scenePosition()"")","        QT_DEPRECATED_VERSION_X_6_0(""Use scenePosition()"")\n        QT_DEPRECATED_VERSION_X_6_0(""Use scenePosition()"")\n",150,refs/changes/17/292117/1
1,1,tests/auto/widgets/util/qsystemtrayicon/tst_qsystemtrayicon.cpp,I34fded516300cc9aab1eb67644dcef8631ecfdf1,322748,1,if QGuiApplication platformName offscreen ,"    if (QGuiApplication::platformName() == ""offscreen"")","    if (QGuiApplication::platformName() == u""offscreen"")\n    if (QGuiApplication::platformName() == u""offscreen"")\n",112,refs/changes/48/322748/1
1,1,src/gui/kernel/qplatformintegration.h,I849943b03655f6c6d9690c9a223fcf6858120729,325879,1,SplitterMouseExtraMargin,        SplitterMouseExtraMargin,        MinimumMouseAreaSize\n        MinimumMouseAreaSize\n,199,refs/changes/79/325879/1
1,1,src/corelib/text/qstringconverter.cpp,I31f03518fd9c70507cbd210a8bcf405b6a0106b1,298943,6,int pos matcher indexIn header ,    int pos = matcher.indexIn(header);,"    int pos = header.indexOf(""meta "");\n    int pos = header.indexOf(""meta "");\n",1542,refs/changes/43/298943/6
1,1,src/concurrent/qtconcurrentrun.cpp,Ic8233aeffbdbd1420bdbde7ad7d03f25cd438ea8,310873,3,running finished status and the return value of the function In addition ,"    running/finished status and the return value of the function. In addition,","    Similar to QtConcurrent::run(), the QFuture returned can be used to query for the\n    running/finished status and the value reported by the function. In addition,\n",287,refs/changes/73/310873/3
1,1,src/tools/androiddeployqt/main.cpp,Iad8c74d30d090adf69a17f2dafb455dff50b3d99,317412,1,QString fileName QFileInfo reader attributes value QLatin<NUMBER>String file toString filePath ,"                    QString fileName = QFileInfo(reader.attributes().value(QLatin1String(""file"")).toString()).filePath();","                    QString fileName = QDir::cleanPath(reader.attributes().value(QLatin1String(""file"")).toString());\n                    QString fileName = QDir::cleanPath(reader.attributes().value(QLatin1String(""file"")).toString());\n",1633,refs/changes/12/317412/1
1,1,src/corelib/io/qfilesystemiterator_win.cpp,Ibfa5e7035515773461f6cdbff35299315ef65737,305804,1, include qlist h ,"#include ""qlist.h""",\nQList<QString> list1(3);\n,42,refs/changes/04/305804/1
1,1,src/corelib/io/qdir.cpp,I2c3bbaefa6b6f08ebf0b90fb7be62e3c6243f19d,295730,1,const auto dirElts qToStringViewIgnoringNull dir split QLatin<NUMBER>Char Qt SkipEmptyParts ,"    const auto dirElts = qToStringViewIgnoringNull(dir).split(QLatin1Char('/'), Qt::SkipEmptyParts);","    const auto fileElts = file.tokenize(QLatin1Char('/'), Qt::SkipEmptyParts);\n    const auto dirElts = dir.tokenize(QLatin1Char('/'), Qt::SkipEmptyParts);\n    const auto fileElts = file.tokenize(QLatin1Char('/'), Qt::SkipEmptyParts);",881,refs/changes/30/295730/1
1,1,tests/auto/corelib/time/qdatetime/tst_qdatetime.cpp,I0eed35df871c69a20bcd7c544fc0e9a48dd8db7b,331989,1,if constexpr sizeof qsizetype sizeof int ,    if constexpr (sizeof(qsizetype) == sizeof(int)),"        QEXPECT_FAIL("""", ""fails on 32-bit systems (QTBUG-89889)"", Continue);\n    if constexpr (sizeof(qsizetype) == 4)\n        QEXPECT_FAIL("""", ""fails on 32-bit systems (QTBUG-89889)"", Continue);",3830,refs/changes/89/331989/1
1,1,src/concurrent/qtconcurrentrun.cpp,Ic8233aeffbdbd1420bdbde7ad7d03f25cd438ea8,310873,3,These functions are a part of the Qt Concurrent framework ,    These functions are a part of the Qt Concurrent framework.,    These functions are part of the Qt Concurrent framework.\n    These functions are part of the Qt Concurrent framework.\n,55,refs/changes/73/310873/3
1,1,src/corelib/kernel/qmetatype.h,I293796daad8e5961efb1f6afe4d42300c04d6ee1,310159,3,if starts with token<NUMBER> begin end std ,"        if (starts_with_token2(begin, end, ""std::__"")) {","        if (starts_with_string(begin, end, ""std::__"")) {\n        if (starts_with_string(begin, end, ""std::__"")) {\n",2477,refs/changes/59/310159/3
1,1,src/corelib/serialization/qjsonobject.h,I78b40aba8200003acfae257ff06f5f15737005e7,267837,1, if QT STRINGVIEW LEVEL <NUMBER>,#if QT_STRINGVIEW_LEVEL < 2,\n    bool m_isDead = false;\n,103,refs/changes/37/267837/1
1,1,tests/auto/corelib/kernel/qdeadlinetimer/tst_qdeadlinetimer.cpp,Ib691f5f23a92fb8b41a24f7b603981d9c9450ddc,314417,2,QTRY VERIFY WITH TIMEOUT timersExecuted <NUMBER> minResolution ,"    QTRY_VERIFY_WITH_TIMEOUT(timersExecuted, 4 * minResolution);","        QSKIP(""Looks like timers didn't fire on time."");\n    if (!QTest::qWaitFor([&timersExecuted]() { return timersExecuted; }, 4 * minResolution))\n        QSKIP(""Looks like timers didn't fire on time."");",596,refs/changes/17/314417/2
1,1,src/corelib/io/qwindowspipereader_p.h,I38ed4861a238e39e793c3716e856e5bfdeed3d74,330320,1,enum State Stopped Running Aborted ,"    enum State { Stopped, Running, Aborted };","    enum State { Stopped, Running, Draining } state;\n    enum State { Stopped, Running, Draining } state;\n",116,refs/changes/20/330320/1
1,1,src/corelib/kernel/qproperty.h,I43803a0dfe210353d0235f0373d2257f75ffe534,331153,2,quintptr const QUntypedPropertyData d const QPropertyBindingSourceLocation location QUntypedPropertyBinding,"        quintptr(+[](const QUntypedPropertyData *d, const QPropertyBindingSourceLocation &location) -> QUntypedPropertyBinding","        { return Qt::makePropertyBinding([d]() -> T { return static_cast<const Property *>(d)->value(); }, location); },\n        [](const QUntypedPropertyData *d, const QPropertyBindingSourceLocation &location) -> QUntypedPropertyBinding\n        { return Qt::makePropertyBinding([d]() -> T { return static_cast<const Property *>(d)->value(); }, location); },",507,refs/changes/53/331153/2
1,1,src/network/ssl/qtlsbackend.cpp,I8409d81fd11fb46e6ab4465b4937a7680a8c2447,331335,2,class BackEndFactoryCollection,class BackEndFactoryCollection,class BackendCollection\nclass BackendCollection\n,58,refs/changes/35/331335/2
1,1,src/gui/rhi/qrhigles2.cpp,Iaf80d0966f45cbb09e7c1000b7854bc488e57bb3,302353,1,qPrintable QString fromUtf<NUMBER> var name ,                     qPrintable(QString::fromUtf8(var.name)));,                     var.name.constData());\n                     var.name.constData());\n,3381,refs/changes/53/302353/1
1,1,src/sql/kernel/qsqldriver.cpp,I0cb1c65b34befcb3690ccad3f081556dd2691344,309118,1,Returns the known maximum length for the identifier a type according to the database settings Returns,    Returns the known maximum length for the identifier \a type according to the database settings. Returns,    INT_MAX by default if the is no maximum for the database.\n    Returns the maximum length for the identifier \a type according to the database settings. Returns\n    INT_MAX by default if the is no maximum for the database.,835,refs/changes/18/309118/1
1,1,src/corelib/tools/qpoolallocator.h,I1ee03f2182201ba6d0c9f5189ab80af8cadce683,270142,1,auto previous std atomic load typename ArenaData AtomicNode d atomicStack ,            auto previous = std::atomic_load<typename ArenaData::AtomicNode>(&d->atomicStack);,            auto previous = d->atomicStack.load(std::memory_order_relaxed);\n            auto previous = d->atomicStack.load(std::memory_order_relaxed);\n,178,refs/changes/42/270142/1
1,1,src/gui/kernel/qevent_p.h,If30566ec4e4ca0077dd5ce494981418e5ba9c28d,305084,3,return static cast QMutableEventPoint static cast QEventPoint me ,        return static_cast<QMutableEventPoint *>(static_cast<QEventPoint *>(me));,        return static_cast<QMutableEventPoint *>(me);\n        return static_cast<QMutableEventPoint *>(me);\n,67,refs/changes/84/305084/3
1,1,src/network/access/decompresshelper.cpp,Iecf3e359734163f15686c949f75d41fa4794a00e,296785,7,return true ,    return true;,"\n            qint64 bytesRead = countHelper->read(temp.data(), temp.size());\n",201,refs/changes/85/296785/7
1,1,tests/auto/corelib/serialization/qdatastream/tst_qdatastream.cpp,I63f0c1c6fa4e2242e6ebe70f50e422ab0fbf1c88,328373,1,QEXPECT FAIL new badsize <NUMBER>x<NUMBER> size INT MAX fails on <NUMBER>bit system Continue ,"        QEXPECT_FAIL(""new badsize 0x10000"", ""size > INT_MAX fails on 32bit system"", Continue);","                     Continue);\n        QEXPECT_FAIL(""new badsize 0x10000"", ""size > INT_MAX fails on 32bit system (QTBUG-87660)"",\n                     Continue);",3032,refs/changes/73/328373/1
1,1,tests/auto/corelib/kernel/qvariant/tst_qvariant.cpp,I363621033f7fc600edcea2acb786820ccba49c86,311545,5,QMetaType registerMutableView MyType MyTypeView MyType data ,"    QMetaType::registerMutableView<MyType, MyTypeView>([&](MyType &data) {","    const bool success = QMetaType::registerMutableView<MyType, MyTypeView>([&](MyType &data) {\n    const bool success = QMetaType::registerMutableView<MyType, MyTypeView>([&](MyType &data) {\n",4746,refs/changes/45/311545/5
1,1,src/corelib/io/qdebug.cpp,I4ca4a35b687b46c39030fffd1626ae6c3294cacf,309096,1,using the locale s <NUMBER> bit codec for some backends which may cause garbled,"    using the locale's 8-bit codec for some backends, which may cause garbled","    output. Note that QDebug buffers internally as UTF-16 and may need to\n    transform to 8-bit using the localae's codec in order to use some backends,\n    which may cause garbled (mojibake) in the output. Restricting to US-ASCII",614,refs/changes/96/309096/1
1,1,src/corelib/io/qprocess_p.h,Ib295bcc91e358926893e9756e3b89346560329f4,324021,1,bool performDying bool readyReadEmitted nullptr ,    bool performDying(bool *readyReadEmitted = nullptr);,\n    const auto charFormat = doc->begin().begin().fragment().charFormat();\n,323,refs/changes/21/324021/1
1,1,src/corelib/io/qwindowspipereader.cpp,I66443c3021d6ba98639a214c3e768be97d2cf14b,331232,3, internal,    \internal,"\n    // Note that signals are not emitted in the call below, as the caller\n",148,refs/changes/32/331232/3
1,1,src/widgets/kernel/qdesktopwidget.cpp,Ifc89be65a0dce265b6729feaf54121c35137cb94,300707,7,QHash QScreen QDesktopScreenWidget newScreenWidgets ,"    QHash<QScreen*, QDesktopScreenWidget*> newScreenWidgets;","    QFlatMap<QScreen*, QDesktopScreenWidget*> newScreenWidgets;\n    QFlatMap<QScreen*, QDesktopScreenWidget*> newScreenWidgets;\n",84,refs/changes/07/300707/7
1,1,tests/auto/tools/qmakelib/evaltest.cpp,I9046dcb14ed520d8868a511d79da6e721e26f72b,308544,1,parser parsedProBlock QStringView out <NUMBER> out <NUMBER> QMakeParser FullGrammar ,"            parser.parsedProBlock(QStringView{ out }, 0, ""out"", 1, QMakeParser::FullGrammar);","            parser.parsedProBlock(out, 0, ""out"", 1, QMakeParser::FullGrammar);\n            parser.parsedProBlock(out, 0, ""out"", 1, QMakeParser::FullGrammar);\n",2873,refs/changes/44/308544/1
1,1,src/corelib/kernel/qmetaobject.cpp,Id7359ffc14897237ea9672dabae9ef199a821907,268941,2,int nargs <NUMBER> include return type,        int nargs = 1; // include return type,        int argIndex = 0;\n        int argIndex = 0;\n,2311,refs/changes/41/268941/2
1,1,src/corelib/kernel/qmetatype.h,I49e5d62b2b29e302ebbd455ac1e7c7c8ade599eb,304548,1,constexpr int normalizeType const char begin const char end bool adjustConst true const char abiNamespaceBegin nullptr bool hasAbiNamespace false ,"    constexpr int normalizeType(const char *begin, const char *end, bool adjustConst = true, const char *abiNamespaceBegin = nullptr, bool hasAbiNamespace=false)","    constexpr int normalizeType(const char *begin, const char *end, bool adjustConst = true, const char *abiNamespaceBegin = nullptr)\n    constexpr int normalizeType(const char *begin, const char *end, bool adjustConst = true, const char *abiNamespaceBegin = nullptr)\n",2421,refs/changes/48/304548/1
1,1,src/testlib/qtestjunitstreamer.cpp,I55598eafa7dafa486ac5a8221029c332ff47413b,329830,5, Errors are written as CDATA within system out comments elsewhere,"    // Errors are written as CDATA within system-out, comments elsewhere","    // respectively, comments elsewhere\n    // Messages/errors are written as CDATA within system-out, system-err,\n    // respectively, comments elsewhere",151,refs/changes/30/329830/5
1,1,src/corelib/text/qregularexpression.cpp,I06b4f54e300541033a9a18339c97338717a06da0,323089,4,return QStringList QString default behavior for empty pattern,        return QStringList({ QString() }); // default behavior for empty pattern,        return QStringList { QString() }; // default behavior for empty pattern\n        return QStringList { QString() }; // default behavior for empty pattern\n,1497,refs/changes/89/323089/4
1,1,src/corelib/text/qstringview.h,I6df3a9507276f5d16d044a6bdbe0e4810cf99440,300457,1,Q CORE EXPORT double toDouble bool ok nullptr const ,    Q_CORE_EXPORT double toDouble(bool *ok = nullptr) const;,    Q_REQUIRED_RESULT Q_CORE_EXPORT float toFloat(bool *ok = nullptr) const;\n    Q_REQUIRED_RESULT Q_CORE_EXPORT double toDouble(bool *ok = nullptr) const;\n,335,refs/changes/57/300457/1
1,1,src/plugins/platforms/qnx/qqnxsimpleclipboard.cpp,I30e30a4d964697a44691363a181cdcef778da51b,313733,1,QFile file m clipboardDir filePath fileName ,    QFile file(m_clipboardDir.filePath(fileName));,    if (!file.open(QIODevice::ReadOnly))\n    QSaveFile file(m_clipboardDir.filePath(fileName));\n    if (!file.open(QIODevice::ReadOnly)),282,refs/changes/33/313733/1
1,1,src/concurrent/qtconcurrentrun.cpp,Ic8233aeffbdbd1420bdbde7ad7d03f25cd438ea8,310873,3,The a function is expected to declare void as its return value,    The \a function is expected to declare void as its return value,"    and must take an additional argument of \e {QPromise<T> &} type,\n    The \a function is expected to return void\n    and must take an additional argument of \e {QPromise<T> &} type,",281,refs/changes/73/310873/3
1,1,src/corelib/thread/qpromise.h,Ibab9681d35fe63754bf394ad0e7923e2683e2457,300337,1,void setFilterMode bool enable d setFilterMode enable ,    void setFilterMode(bool enable) { d.setFilterMode(enable); },"\n        d.reportResult(std::forward<U>(result), index);\n",99,refs/changes/37/300337/1
1,1,src/network/ssl/qsslsocket_mac.cpp,I05877de9c02857594e76b24d52e7578bdb01df69,330049,4,return false ,        return false;,"\n        qCWarning(lcSsl) << ""Cannot provide the list of supported protocols for the backend"" << backendName;\n",1577,refs/changes/49/330049/4
1,1,src/corelib/tools/qflatmap_p.h,Ife12576c4abb39a3ea2acb0a1ba0faca91b3a4c5,264927,2,value type x std move key T ,"        value_type x{ std::move(key), T() };",            mc.erase(it);\n        T result;\n        auto &mc = mutableContent();,116,refs/changes/27/264927/2
1,1,src/corelib/thread/qfuture.h,I9494ddc58c6db192c66edb988105927da6d61a3b,294437,7,template typename T T typename QtPrivate EnableForNonVoid T ,"    template<typename T_ = T, typename = QtPrivate::EnableForNonVoid<T_>>","    template<typename U = T, typename = QtPrivate::EnableForNonVoid<U>>\n    template<typename U = T, typename = QtPrivate::EnableForNonVoid<U>>\n",65,refs/changes/37/294437/7
1,1,tests/auto/widgets/widgets/qdatetimeedit/tst_qdatetimeedit.cpp,I05eaaf57d87a9111d3609ebab81bc707f8af98f0,298180,1, endif,#endif,\n                Start or finish a scrolling sequence by grabbing/releasing the wheel via\n,4545,refs/changes/80/298180/1
1,1,src/corelib/text/qlocale_p.h,Iea47e0f8fc8b40378df7fffd1624c20707a6ca39,308614,1,qsizetype processed <NUMBER> negative value means error,    qsizetype processed = -1;    // negative value means error,    qsizetype processed = -1;\n\n    // positive for success (0 means nothing parsed; -1 means we did try to,72,refs/changes/14/308614/1
1,1,src/corelib/time/qdatetimeparser_p.h,Ia6ba08df198288b8b11d3b2d2052c194f04fe8a1,316622,2,bool operator const ParsedSection o const,        bool operator==(const ParsedSection &o) const,\n        QPropertyObserver **nodeState;\n,214,refs/changes/22/316622/2
1,1,src/corelib/tools/qhash.cpp,I614d7b3082e91c9d16e0441649d6a153b222bd2e,316032,1, endif,#  endif,"\n        QCOMPARE(result, std::vector<int>({ 2, 4, 6 }));\n",395,refs/changes/32/316032/1
1,1,src/corelib/kernel/qproperty.h,I43803a0dfe210353d0235f0373d2257f75ffe534,331153,2,return QUntypedPropertyBinding ,            return QUntypedPropertyBinding {};,\n            return QUntypedPropertyBinding {};\n,605,refs/changes/53/331153/2
1,1,src/corelib/kernel/qobject.cpp,Id7359ffc14897237ea9672dabae9ef199a821907,268941,2,new QMetaCallEvent c method offset c method relative c callFunction sender signal index argv semaphore ,"                        new QMetaCallEvent(c->method_offset, c->method_relative, c->callFunction, sender, signal_index, argv, &semaphore);","                                           sender, signal_index, argv, &semaphore);\n                        new QMetaCallEvent(c->method_offset, c->method_relative, c->callFunction,\n                                           sender, signal_index, argv, &semaphore);",3822,refs/changes/41/268941/2
1,1,src/corelib/text/qanystringview.h,Ia7179760fca0e0b67d52f5accb0a62e389b17913,301594,1, Q ANY SV MAKE RELOP ,//Q_ANY_SV_MAKE_RELOP(<=>),#ifdef __cpp_impl_three_way_comparison\nQ_ANY_SV_MAKE_RELOP(<=>)\n#else,228,refs/changes/94/301594/1
1,1,src/concurrent/qtconcurrentfilter.h,I219f08d73b97317820ec6e329ab1e6c89c0545f1,318848,2,reduce ResultType std forward InitialValueType initialValue options ,"            reduce, ResultType(std::forward<InitialValueType>(initialValue)), options);","            ResultType(std::forward<InitialValueType>(initialValue)), options);\n            ResultType(std::forward<InitialValueType>(initialValue)), options);\n",335,refs/changes/48/318848/2
1,1,src/corelib/tools/qhashfunctions.h,Id7a1b97b3c0d219e65de2e6e1fe6faf092f8ce16,289821,3,if sizeof size t <NUMBER> ,    if (sizeof(size_t) == 4) {,    if constexpr (sizeof(size_t) == 4) {\n    if constexpr (sizeof(size_t) == 4) {\n,76,refs/changes/21/289821/3
1,1,src/corelib/kernel/qproperty.h,I3551e4357fe5780fb75da80bf8be208ec152dc2a,305075,2,if constexpr std is invocable v decltype Callback Class ,"        if constexpr (std::is_invocable_v<decltype(Callback), Class>) {","            // When newValue is T, we move it, if it's const T& it stays const T& and won't get moved\n        if constexpr (CallbackAcceptsOldValue) {\n            // When newValue is T, we move it, if it's const T& it stays const T& and won't get moved",480,refs/changes/75/305075/2
1,1,src/corelib/tools/qcommandlineparser.cpp,Ib6211b24cdaa4683a4f62c90b5a1a20ba69f1cff,336736,1,usage qApp qApp arguments constFirst QStringLiteral executable name ,"    usage += qApp ? qApp->arguments().constFirst() : QStringLiteral(""<executable_name>"");","    usage += qApp ? QCoreApplication::arguments().constFirst() : QStringLiteral(""<executable_name>"");\n    usage += qApp ? QCoreApplication::arguments().constFirst() : QStringLiteral(""<executable_name>"");\n",1129,refs/changes/36/336736/1
1,1,src/corelib/tools/qstring.h,I9b7748db95291c34b95ff3ad3e3aabc8215aeaae,253644,2,QT DEPRECATED X Use vasprintf arg or QTextStream instead ,"    QT_DEPRECATED_X(""Use vasprintf(), arg() or QTextStream instead"")","    QT_DEPRECATED_X(""Use asprintf(), arg() or QTextStream instead"")\n    QT_DEPRECATED_X(""Use asprintf(), arg() or QTextStream instead"")\n",326,refs/changes/44/253644/2
1,1,src/corelib/serialization/qjsonobject.cpp,Ic3035552c6174167b4fe19fd4c825500dff16ded,267432,1,if needsToCompact ,    if (needsToCompact()),    compactIfNeeded();\n    compactIfNeeded();\n,528,refs/changes/32/267432/1
1,1,tests/auto/corelib/thread/qfuture/tst_qfuture.cpp,Ic9fa978380e2c24e190e68d974051a650b0e5571,297139,7,else if std is same v Type void ,"    else if (!std::is_same_v<Type, void>)","    if constexpr (!std::is_same_v<Type, void>)\n\n    if constexpr (!std::is_same_v<Type, void>)",1897,refs/changes/39/297139/7
1,1,src/corelib/text/qchar.cpp,I6175f6ab9bcf1956f6f97ab0c9d9d5aaf777296d,320486,2,QString str ,    QString str;,    QString str = getString();\n    QString str = getString();\n,2137,refs/changes/86/320486/2
1,1,src/corelib/global/qglobal.h,I3bb957b50973b5b17353b5f470f9781974d602b1,313503,4, define QT DEPRECATED CODE ,#  define QT_DEPRECATED_CODE(...),#  define QT_DEPRECATED_CODE(...) __VA_ARGS__\n#  define QT_DEPRECATED_CODE(...) __VA_ARGS__\n,274,refs/changes/03/313503/4
1,1,src/dbus/doc/snippets/code/doc_src_qdbusadaptors.cpp,Idfe86ae0f38e43678cc5e746e30e5eeaf8eb72dc,302240,5, Q NOREPLY void myMethod ,//Q_NOREPLY void myMethod();,Q_NOREPLY void myMethod();\nQ_NOREPLY void myMethod();\n,93,refs/changes/40/302240/5
1,1,src/corelib/kernel/qcore_mac_p.h,Ibb0a9c0bcfefbda4347737212e40e300a3184982,300230,3,NSObject object nil ,    NSObject *object = nil;,    NSObject *object = nullptr;\n    NSObject *object = nullptr;\n,418,refs/changes/30/300230/3
1,1,src/plugins/platforms/xcb/qxcbconnection_xi2.cpp,Ie6a3d8dd494f981e8706b9a66a1021dfb51baec4,323794,6,QInputDevice Capability Scroll <NUMBER> ,"                                                              QInputDevice::Capability::Scroll, 3);",                                                              QInputDevice::Capability::Scroll);\n                                                              QInputDevice::Capability::Scroll);\n,261,refs/changes/94/323794/6
1,1,src/gui/kernel/qpalette.cpp,Ibfa925f3e4cb0be89915607eee142926e05000b5,282369,1,displayedData QStringLiteral resolve <NUMBER>x <NUMBER> arg p resolve <NUMBER> <NUMBER> ,"    displayedData << QStringLiteral(""resolve=0x%1"").arg(p.resolve(), 0, 16);",    QDebugStateSaver saver(dbg);\n    QDebug nospace = dbg.nospace();\n,1263,refs/changes/69/282369/1
1,1,src/corelib/text/qstringconverter.cpp,Ic267150db80358dbc4010bb1db2af5c0eb97dc65,298224,3,QByteArray QUtf<NUMBER> convertFromUnicode const QChar uc int len QStringConverterBase State state ,"QByteArray QUtf8::convertFromUnicode(const QChar *uc, int len, QStringConverterBase::State *state)","QByteArray QUtf8::convertFromUnicode(const QChar *uc, qsizetype len, QStringConverterBase::State *state)\nQByteArray QUtf8::convertFromUnicode(const QChar *uc, qsizetype len, QStringConverterBase::State *state)\n",405,refs/changes/24/298224/3
1,1,src/corelib/kernel/qproperty.cpp,I9af4a99d49f4b02ee9645a2cc9a9a024a6a1a552,331673,2, sa QObjectBindableProperty Qt s Property System Qt Bindable Properties ,"  \sa QObjectBindableProperty, {Qt's Property System}, {Qt Bindable Properties}","\n  However, every write to the QObjectCompatProperty has to be analyzed carefully\n",1079,refs/changes/73/331673/2
1,1,src/corelib/text/qbytearray.cpp,I11cba17d428791e06c9bd4c7a727b7bd6b6aec3c,309111,3,But be careful when passing fixed size C arrays to QByteArray methods that,    But be careful when passing fixed size C arrays to QByteArray methods that,"    size, and not by scanning for the first '\\0' terminator. For example:\n    But be careful when passing fixed size C arrays (including string literals)\n    to QByteArray methods that accept a start-pointer or QByteArrayView: the",848,refs/changes/11/309111/3
1,1,src/corelib/text/qbytearray.cpp,I787af7fcfa17e1be87decb64c41c609cc24be117,307340,5,const qsizetype len int strlen str ,        const qsizetype len = int(strlen(str));,        const qsizetype len = qsizetype(strlen(str));\n        const qsizetype len = qsizetype(strlen(str));\n,1120,refs/changes/40/307340/5
1,1,src/gui/image/qiconloader_p.h,Ic08a899321eaffc46b8461aaee3dbaa4d2c727a9,305159,2, include QtCore QList ,#    include <QtCore/QList>,#include <QtCore/QTypeInfo>\n#include <QtCore/QList>\n#include <QtCore/QTypeInfo>,63,refs/changes/59/305159/2
1,1,src/corelib/time/qcalendar.cpp,I28a473896539b79bbd4b6729b3a417631f9ac8c6,270316,2,return calendarRegistry byName keys ,    return calendarRegistry->byName.keys();,    return result;\n    QStringList result;\n    for (const auto &pair : calendarRegistry->byName),509,refs/changes/16/270316/2
1,1,src/gui/text/qtextformat.cpp,I0796f18224aac8df6baf8359c35022fd98fe64ef,299748,1, since <NUMBER> <NUMBER> <NUMBER>,    \since 5.15.1,    \since 6.0\n    \since 6.0\n,1784,refs/changes/48/299748/1
1,1,src/platformsupport/fontdatabases/freetype/qfontengine_ft.cpp,I903085ddeac59224715dca6e8a1ff26c44f5b0b0,277795,1,while i <NUMBER> ,    while(i > 0) {,    while (i > 0) {\n    while (i > 0) {\n,1396,refs/changes/95/277795/1
1,1,util/unicode/main.cpp,I05ff2a6337b7ed14e0a2dc9c03fc784c92b63515,309135,3,if qAbs diff <NUMBER> <NUMBER> Does happen,            if (qAbs(diff) >= (1 << 13)) { // Does happen,            if (qAbs(diff) >= (1<<13)) {\n            if (qAbs(diff) >= (1<<13)) {\n,1234,refs/changes/35/309135/3
1,1,src/corelib/tools/qarraydataops.h,I313a1d1817577507fe07a5b9b7d2c90b0969b490,307381,2,for const int step iter end <NUMBER> <NUMBER> iter end iter step ,            for (const int step = *iter < end ? 1 : -1; *iter != end; *iter += step),"            for (const int step = *iter < end ? 1 : -1; *iter != end; std::advance(*iter, step))\n            for (const int step = *iter < end ? 1 : -1; *iter != end; std::advance(*iter, step))\n",150,refs/changes/81/307381/2
1,1,src/corelib/kernel/qproperty.cpp,I43803a0dfe210353d0235f0373d2257f75ffe534,331153,2, obsolete,  \obsolete,\n  Returns a default constructed QUntypedPropertyBinding if no binding is set.\n,1389,refs/changes/53/331153/2
1,1,src/corelib/kernel/qvariant.h,I46617cc4d5c1e8c162d0f1f7ae32e4cfe9ce915c,256661,1, if possible we reuse the current QVariant private,    //if possible we reuse the current QVariant private,    // If possible we reuse the current QVariant private.\n    // If possible we reuse the current QVariant private.\n,551,refs/changes/61/256661/1
1,1,src/corelib/time/qdatetime.cpp,I81afda9063fa232d06841d63f69e19b49f8083f3,314629,2, note Day and month names are given in English ,    \note Day and month names are given in English.,"    If localized month and day names are desired, use\n    \note Day and month names are given in English (C locale).\n    If localized month and day names are desired, use",1130,refs/changes/29/314629/2
1,1,src/corelib/text/qregularexpression.cpp,Icb5efd5c6ef27f2e31a9780bf62f5671ddc603cd,311621,2,QList int capturedOffsets ,    QList<int> capturedOffsets; //,    QList<qsizetype> capturedOffsets;\n    QList<qsizetype> capturedOffsets;\n,790,refs/changes/21/311621/2
1,1,tests/auto/corelib/time/qdatetime/tst_qdatetime.cpp,I7b0d638501cb5d875a678cde213547a83ed7529e,309850,1,QDateTime bound QDateTime fromMSecsSinceEpoch std numeric limits qint<NUMBER> min ,    QDateTime bound = QDateTime::fromMSecsSinceEpoch(std::numeric_limits<qint64>::min());,"    QDateTime bound = QDateTime::fromMSecsSinceEpoch(std::numeric_limits<qint64>::min(), Qt::UTC);\n    QDateTime bound = QDateTime::fromMSecsSinceEpoch(std::numeric_limits<qint64>::min(), Qt::UTC);\n",1126,refs/changes/50/309850/1
1,1,src/tools/moc/main.cpp,I49e5d62b2b29e302ebbd455ac1e7c7c8ade599eb,304548,1,if ciso<NUMBER>file exists ,        if(ciso646file.exists()) {,"        else\n            moc.abiNamespace = """";\n",572,refs/changes/48/304548/1
1,1,util/unicode/main.cpp,I05ff2a6337b7ed14e0a2dc9c03fc784c92b63515,309135,3,if qAbs diff <NUMBER> <NUMBER> Does happen,            if (qAbs(diff) >= (1 << 13)) { // Does happen,            if (qAbs(diff) >= (1<<13)) {\n            if (qAbs(diff) >= (1<<13)) {\n,1852,refs/changes/35/309135/3
1,1,src/gui/kernel/qevent.h,I8e6f587da76d6d0bca6e965ce8ebc7e67b868011,292117,1,QT DEPRECATED VERSION X <NUMBER> <NUMBER> Use globalPosition ,"    QT_DEPRECATED_VERSION_X_5_15(""Use globalPosition()"")","    QT_DEPRECATED_VERSION_X_6_0(""Use globalPosition()"")\n    QT_DEPRECATED_VERSION_X_6_0(""Use globalPosition()"")\n",107,refs/changes/17/292117/1
1,1,src/corelib/tools/qflatmap_p.h,Ife12576c4abb39a3ea2acb0a1ba0faca91b3a4c5,264927,2,if it content end it first x first ,        if (it != content.end() && it->first == x.first) {,"        auto &mc = mutableContent();\n        auto it = std::lower_bound(mc.begin(), mc.end(), key,\n                                   [this](const value_type &v, const Key &k)",107,refs/changes/27/264927/2
1,1,src/corelib/kernel/qproperty.cpp,I56c0bce15af8121159630b5c0922c287c15b7618,331538,1,For example if the property is never read the change handler will,"  For example, if the property is never read, the change handler will",  non-dirty state to dirty state. It is marked as dirty\n  whenever any dependency changes. Is is marked non-dirty when it is read.\n,1039,refs/changes/38/331538/1
